{"version":3,"sources":["types/theme.ts","style/theme.ts","style/globalStyle.ts","database/index.ts","store/theme.ts","types/player.ts","assets/logo.svg","assets/name-light.svg","assets/name-dark.svg","components/Home/Logo/index.tsx","components/Global/atoms/Modal/index.tsx","components/Global/atoms/Button/index.tsx","components/Global/atoms/Input/index.tsx","util/hook/useGameRoomName.ts","util/generateUniqueId.ts","store/players.ts","types/card.ts","store/user.ts","util/hook/useFirebaseRoom.ts","components/Home/RoomDialog/index.tsx","util/hook/useUserName.ts","components/Global/molecules/NameFillin/index.tsx","components/Global/atoms/ThemeToggler/index.tsx","store/modal.ts","store/deck.ts","store/bind.ts","types/types.ts","store/score.ts","store/game.ts","store/winTricks.ts","util/hook/useInitData.ts","views/Home/index.tsx","components/WaitRoom/PlayerWindow/index.tsx","components/Global/atoms/ShareIcon/index.tsx","util/sleep.ts","components/WaitRoom/SendInviteLinkButton/index.tsx","components/Global/atoms/Radio/index.tsx","components/WaitRoom/TeamRadios/index.tsx","util/generateArray.ts","components/Global/molecules/Loading/index.tsx","util/hook/useUserReadyStatus.ts","views/WaitRoom/index.tsx","util/deck.ts","util/suit.ts","components/Global/atoms/Suit/index.tsx","components/GameRoom/ThinkingIcon/index.tsx","components/GameRoom/Modal/ModalBinding/PlayerList.tsx","util/isObjectEquivalent.ts","components/GameRoom/Modal/ModalBinding/OptionButton.tsx","components/GameRoom/Modal/ModalBinding/OptionList.tsx","components/GameRoom/Modal/ModalBinding/BindList.tsx","components/GameRoom/Modal/ModalBinding/index.tsx","components/Global/molecules/ModalConfirm/index.tsx","assets/kanaheiclap.gif","components/GameRoom/Modal/ModalGiveUp/index.tsx","components/GameRoom/Modal/ModalResult/index.tsx","assets/bumpintowindow.gif","components/GameRoom/Modal/ModalRoot/index.tsx","components/GameRoom/Card/index.tsx","components/GameRoom/Cards/UserHandCards/index.tsx","components/GameRoom/Cards/OtherUserHandCards/index.tsx","components/GameRoom/Cards/index.tsx","components/GameRoom/CardTable/Nameplate/index.tsx","components/GameRoom/CardTable/PlayedCard/index.tsx","util/game.ts","components/GameRoom/CardTable/index.tsx","components/GameRoom/MainInfo/InfoBox/index.tsx","components/GameRoom/MainInfo/index.tsx","components/GameRoom/SideInfo/index.tsx","components/GameRoom/Settings/Content/index.tsx","components/GameRoom/Settings/index.tsx","components/GameRoom/WonTricks/Icon/index.tsx","components/GameRoom/WonTricks/Content/index.tsx","components/GameRoom/WonTricks/index.tsx","components/GameRoom/Navbar/index.tsx","views/GameRoom/index.tsx","views/InvitePage/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ThemeTypes","color","GlobalStyle","createGlobalStyle","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","getFirebaseData","path","dbRef","ref","result","get","child","then","snapshot","exists","val","catch","error","console","TeamTypes","themeState","atom","key","default","existingChosenTheme","JSON","parse","localStorage","getItem","Light","defaultTheme","themeData","light","bg","fg","dark","StyledLogo","styled","div","theme","Logo","props","className","useRecoilState","nameIcon","NameLightIcon","NameDarkIcon","src","LogoSVG","alt","backgroundColor","StyledModalPage","animated","ModalPage","active","children","onDeactive","useRecoilValue","transitions","useTransition","from","opacity","transform","enter","leave","item","style","onClick","StyledButton","button","getButtonStyle","themeType","Button","type","size","classnames","styledInput","value","placeholder","onChange","onFocus","maxLength","useGameRoomName","useState","gameRoomName","setRoomName","warnMessage","setWarnMessage","validateRoomName","test","generateUniqueId","Math","random","toString","substring","CardSuitType","SuitColorType","playersData","teamArray","selector","map","data","team","OrderedStartFromTeamOne","playerDataState","filter","player","TeamOne","TeamTwo","playerData","name","handleIndex","index","relationWithUser","user","userNameState","userIndex","indexOf","nextIndex","teammateIndex","previousIndex","teammate","nextPlayer","previousPlayer","userIDState","userRoomState","userIndexState","userName","findIndex","userTeamState","playerList","length","find","navState","useFirebaseRoom","setUserID","useSetRecoilState","setLocalRoom","history","useHistory","updateDbRoomData","roomID","roomName","a","roomRef","db","userID","current","Date","timestamp","userInfo","id","update","playersInfo","toPath","push","boxBorder","cancel_bg","cancel_fg","title_bg","title_fg","sub_title_fg","sub_title_bb","Content","box_border","CreateButton","isLengthValid","e","RoomButton","RoomDialog","closeRoomList","roomList","userGameRoomName","Modal","stopPropagation","room","target","preventDefault","createRoom","useUserName","setUserName","validateUserName","isVaild","name_fg","border","button_color","NameForm","form","NameFillIn","onEnter","actionText","buttonText","Toggler","ThemeToggler","toggleTheme","useEffect","setItem","stringify","pre","Dark","modalState","userDeckState","otherPlayerDeckState","badDeck","userDeck","card","number","reduce","b","responseToBadDeck","OKtoPlay","ReadyTypes","GameStatusTypes","NavigatorTypes","userPickBindState","nowBindState","suit","Club","playersCalledListState","availibleTricksState","min","Spade","trick","teamShouldWinState","calledPlayer","team1","team2","calledTeam","p","anotherTeam","calledTeamShouldWin","anotherTeamShouldWin","teamScoresState","currentPlayerName","thisRoundSuitState","thisRoundCardsState","trumpState","isUserTurnState","nowPlayer","isUserLastPlayerState","isThisRoundEndState","isGameEndState","team1ShouldWin","team2ShouldWin","team1Score","team2Score","userWinTricksState","useInitData","initUserName","useResetRecoilState","initUserRoom","initUserID","initModalType","initUserDeck","initScore","initUserPickBind","initNowBind","initRoundCards","initTrump","initCalledList","initWinTricks","initPlayerData","initGameRoomData","initGameData","HomePage","Home","showRoomDialog","toggleRoomDialog","setRoomList","firebaseRef","React","subscribeRooms","removeListeners","onValue","roomsData","filterOutAbandonedRoom","Object","entries","obj","set","rooms","values","off","PlayerOrders","w_border","st_bg","st_border","cl_bg","cl_border","name_bg","name_st_fg","name_cl_fg","ready_fg","ready_bg","ready_border","Window","PlayerBox","order","playerName","defaultTeam","First","Fourth","playerTeam","ready","PlayerWindow","playersOrder","Second","Third","Icon","span","iconColor","ShareIcon","sleep","ms","Promise","resolve","setTimeout","icon_color","modal_color","Toast","SuccessToast","SendInviteLinkButton","roomId","isCopied","setIsCopied","inviteLink","navigator","clipboard","writeText","copyInviteLink","StyledRadio","marginRight","Radio","default_f","st_fg","cl_fg","RadioArea","TeamOption","isChosen","teamIndex","chosen","TeamRadios","userTeam","playerInfoRef","handleChooseTeam","generateArray","Array","_","x","dot","LoadingModal","Loading","text","countdown","noOpacity","action","cancelReady","isCountdown","timeLeft","setTimeLeft","dots","countdownInterval","setInterval","clearInterval","useUserReadyStatus","readyStatus","setReadyStatus","userId","setReady","isReady","playersInfoRef","rawFirebaseData","gameInfo","currentPlayer","userReadyStatus","Room","ReadyButton","buttonMessage","WaitRoom","setButtonMessage","setPlayerData","EnterGame","isAllReady","handleUserData","rawPlayersList","sortedByTimestamp","sort","userOrder","userDefaultTeam","prepareWaitRoom","initWaitRoomData","detectUserDisConnect","enterGame","remove","onDisconnect","cancel","teamOneAmount","teamTwoAmount","dealCards","playerAmount","deck","players","i","cards","Heart","Diamond","cardAPoint","sortCards","shuffledDeck","floor","shuffle","j","buildNewDeck","suitColor","Black","Red","Suit","suitCode","getSuitHtmlCode","ThinkingIcon","t1_name_fg","t2_name_fg","t1_name_bg","t2_name_bg","binds_bg","red_suit_color","black_suit_color","pass_color","Player","teamColor","getUserTurnEffect","PlayInfo","calledList","isPlayerTurn","is_player_turn","called","isPassed","bind","PlayerList","setCalledList","calledBindsRef","allCalledBinds","isObjectEquivalent","aKeys","keys","bKeys","every","unable_color","OptionButton","isUnableBind","trickNumber","isPicked","getBorder","number_c","OptionRow","Options","isUserTurn","suits","pickBindState","setPickBindState","nowBind","bindData","List","OptionList","tricks","Box","status_unable_bg","status_unable_fg","call_unable_bg","call_unable_fg","status_active_bg","status_active_fg","call_pass_bg","call_pass_fg","call_active_bg","call_active_fg","Hint","hint","BindList","userPickBind","setUserPickBind","setNowBind","setTrump","availibleTricks","gameInfoRef","detectTrumpDecided","nowBindRef","nowBindData","useMemo","noBind","callBind","userBindListRef","prevUserBinds","getNext","toUpdate","passedPlayers","v","includes","bindListRef","binds","playersCalledList","playerCalledList","some","getNextPlayer","calledBinds","playerIndex","is_user_turn","has_pick_bind","disabled","content_bg","BindingBox","ModalBinding","yes_button_fg","yes_button_bg","no_button_fg","no_button_bg","AskBox","imageUrl","description","onConfirm","onCancel","onConfirmText","onCancelText","ModalConfirm","ModalGiveUp","setResponseToBadDeck","Kanahei","Restart","AninimationBox","Animations","delay","toggleDelay","setDelay","mainFireWorkData","loop","autoplay","animationData","mainFireWork","rendererSettings","preserveAspectRatio","subFireWorkData","subFireWork","thirdFireWorkData","thirdFireWork","options","height","width","win_fg","ResultBox","winTeam","isUserWin","openConfirmLeaveModal","refreshGame","teamName","eventRef","buttonColor","yellow_button","orange_button","green_button","listenOnOneMoreGame","removeOneMoreGameListener","oneMoreGame","OneMoreGame","ChangeMate","ModalResult","ModalRoot","trump","isOKtoPlay","isGotWinner","modalType","setModalType","backToWaitRoom","leaveGame","SomeoneLeaveGame","front_bg","back_bg","suit_red","suit_black","pattern","shadow","PokerCard","Card","hasDetail","nowPickSuit","numberOnCard","numberInPoker","sameSuit","isNotPicked","UserHandCards","thisRoundSuit","isUserLastPlayer","setUserDeck","setNowPickSuit","handlePickCard","isValidCard","playCard","removeCardFromDeck","pickedSuit","cardsRef","userPlayData","toUpdateGameInfo","thisRoundCards","newDeck","OtherUserHandCards","cardAmount","cardArray","CardGroup","Cards","otherPlayerDeck","orderedPlayers","fc","bw","highlight_color_team","Tag","PlayerNameTag","isCurrentPlayer","Names","Nameplate","PlayedCard","currentSuit","updateThisRoundCards","teamScores","updateTeamScores","isThisRoundEnd","setOtherPlayerDeck","setUserWinTricks","d","orderCards","playedPlayer","handleRoundEnded","winner","getRoundWinner","updatePoints","collectThisTrick","winnerIndex","point","countPoint","max","getBiggestCard","winnerTeam","Table","border_color","CardTable","InfoBox","title","Board","Point","team1color","team2color","StyledSuit","red","black","PointInfo","teamShouldWin","MainInfo","SideNav","SideInfo","renderIcon","content","nowNav","setNowNav","Item","b_bottom","SettingButton","exit_button","mail_button","line","button_bg","PlusIcon","isOpen","Settings","StyledCardIcon","CardIcon","Empty","userWinTricks","WonTricks","Background","nav","Navbar","GameRoom","setNowPlayerState","setThisRoundSuit","listenOnCurrentPlayer","listenOnThisRoundSuit","listenOnChangeRouteEvent","dealDeck","deckRef","currentPlayerRef","nowPlayerID","roundSuitRef","roundSuit","event","deckInfo","stripes_1","stripes_2","decoration_arrows","title_block_1","title_block_2","title_block_3","Page","InvitePage","match","params","setPlayers","roomData","currentPlayers","getRoom","App","exact","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ae72e79.chunk.js","sourcesContent":["\nexport enum ThemeTypes {\n\tLight = 'light',\n\tDark = 'dark',\n}\n\nexport interface ThemeDataDetail {\n    [key: string]: string;\n}\n\nexport interface ThemeData {\n    [ThemeTypes.Light]: ThemeDataDetail;\n    [ThemeTypes.Dark]: ThemeDataDetail;\n}","export const color = {\n    $theme_background: '#F6F3EB',\n    $title_font_color: '#965735',\n    $brown_color: '#8c6954',\n    $pink_color: '#f29c9b',\n    $green_color: '#a3c07e',\n    $warn_red_color: '#BF3131',\n    $red_suit_color: '#AF3C3C',\n    $black_suit_color: '#323232',\n    $shadow: 'rgba(124, 124, 124, 0.4)',\n    $highlight_color: '#f5db8f',\n    $pass_color: '#a5dc6e',\n    $unable_color: '#dcdcdc',\n    $unable_font_color: '#C4C4C4',\n    $orange_color: '#f5ab57',\n    $under_line_color: '#E3E1E1',\n    $default_font_color: '#323232',\n    $fluorescent_pink_color: '#FFC2C0',\n    $fluorescent_yellow_color: '#FEEE95',\n    $fluorescent_green_color: '#0FFF50',\n    $fluorescent_orange_color: '#FF5F1F',\n\n    $dark_border_color: '#E5D3D2',\n    $dark_default_font_color: '#F3F3F3',\n    $dark_dim_border_color: '#767675',\n    $dark_black_suit_color: '#E5D3D2',\n    $dark_red_suit_color: '#F7274F',\n    $dark_bg_color: '#2B2C2A',\n    $dark_dim_bg_color: '#333332',\n    $light_pink_color: '#FFE9E8',\n    $dark_unable_color: '#484545'\n}","import { createGlobalStyle } from \"styled-components\";\nimport { color } from \"style/theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n    font-family: 'Kosugi Maru', sans-serif;\n    user-select: none;\n    }\n    \n    body,\n    html {\n    font-weight: 400;\n    background-color: ${color.$theme_background};\n    box-sizing: border-box;\n    overflow: hidden;\n    overflow-x: hidden;\n    height: 100%;\n    width: 100%;\n    transform: translate3d(0, 0, 0);\n    padding: 0;\n    margin: auto;\n    color: ${color.$default_font_color};\n    }\n\n    #root {\n    height: 100%;\n    overflow: hidden;\n\n        & > div {\n            padding: 5vw;\n            height: 100%;\n            box-sizing: border-box;\n        }\n    }\n\n    div {\n        padding: 0;\n        margin: 0;\n    }\n\n    button {\n        border: none;\n        margin: 0;\n        padding: 0;\n        \n        &:active,\n        &:focus {\n            outline: none;\n        }\n    }\n\n    p {\n        margin: 0;\n    }\n`;","import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n\nexport const getFirebaseData = (path: string = \"\") => {\n  const dbRef = ref(database);\n\n  const result = get(child(dbRef, `/${path}`))\n    .then((snapshot) => {\n      if (snapshot.exists()) {\n        return snapshot.val();\n      } else {\n        return null;\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n\treturn result;\n};\n\nexport default database;\n","import {\n    atom\n} from 'recoil';\nimport { ThemeTypes } from 'types/theme';\n\nconst defaultTheme = () => {\n    const existingChosenTheme = JSON.parse(localStorage.getItem('cake-and-bridge-theme') || '{}');\n    if(typeof existingChosenTheme !== 'string') {\n        return ThemeTypes.Light;\n    }   \n    return existingChosenTheme;\n}\n\nexport const themeState = atom({\n    key: 'themeState',\n    default: defaultTheme() as ThemeTypes,\n});","export enum TeamTypes {\n\tTeamOne = 'team1',\n\tTeamTwo = 'team2',\n}\n\nexport type Team = TeamTypes.TeamOne | TeamTypes.TeamTwo;\n\nexport interface PlayerData {\n    name: string;\n    team: TeamTypes;\n    timestamp: number;\n    id: string;\n    ready?: boolean;\n}","export default __webpack_public_path__ + \"static/media/logo.ba38e50a.svg\";","export default __webpack_public_path__ + \"static/media/name-light.5c6afb25.svg\";","export default __webpack_public_path__ + \"static/media/name-dark.f17fa7b4.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from \"recoil\";\nimport { themeState } from 'store/theme';\nimport { color } from \"style/theme\";\nimport LogoSVG from 'assets/logo.svg';\nimport NameLightIcon from 'assets/name-light.svg';\nimport NameDarkIcon from 'assets/name-dark.svg';\nimport { ThemeTypes } from 'types/theme';\n\nconst themeData = {\n    light: { \n\t\tbg: 'white',\n        fg: color.$title_font_color,\n\t},\n    dark: { \n\t\tbg: color.$dark_dim_bg_color,\n        fg: color.$fluorescent_pink_color,\n\t},\n}\n\nconst StyledLogo = styled.div`\n    border-radius: 100%;\n    text-align: center;\n    width: 220px;\n    height: 220px;\n    padding: 30px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    transition: .3s all;\n    background-color: ${({theme}) => theme.bg };\n\n    .image {\n        width: 65%;\n        margin-bottom: 20px;\n    }\n\n    .name {\n        width: 70%;\n    }\n`\n\ninterface LogoProperty {\n    className: string;\n}\n\nconst Logo = (props: LogoProperty) => {\n    const { className } = props;\n    const [theme] = useRecoilState(themeState);\n    const nameIcon = theme === ThemeTypes.Light ? NameLightIcon :  NameDarkIcon;\n    return (\n        <StyledLogo \n            theme={themeData[theme]}\n            className={className}>\n                <img className=\"image\" src={LogoSVG} alt=\"logo\" />\n                <img className=\"name\" src={nameIcon} alt=\"logo\" />\n        </StyledLogo>\n    );\n}\n\nexport default Logo;","import React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport { useRecoilValue } from 'recoil';\nimport { color } from 'style/theme';\nimport { themeState } from 'store/theme';\nimport styled from 'styled-components';\n\nconst themeData = {\n    light: { backgroundColor: '#f3e9e9' },\n    dark: { backgroundColor: color.$dark_bg_color },\n}\n\nconst StyledModalPage = styled(animated.div)`\n    background-color: rgba(0, 0, 0, 0.25);\n\twidth: 100%;\n\theight: 100%;\n    top: 0;\n    left: 0;\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n    z-index: 20;\n\n    &.no-opacity {\n        background-color: ${({ theme }) => theme.backgroundColor};\n    }\n\n\n    &.result_modal {\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n\n    & > div {\n        min-width: 65vw;\n    }\n`\ninterface ModalPageProperty {\n    className?: string;\n    active: Boolean;\n    children: React.ReactNode;\n    onDeactive?: (e: React.MouseEvent<HTMLElement>) => void,\n}\n\nconst ModalPage = (props: ModalPageProperty) => {\n    const { active, children, className, onDeactive } = props;\n    const theme = useRecoilValue(themeState);\n\n    const transitions = useTransition(active, {\n        from: { opacity: 0, transform: \"translateY(-15px)\" },\n        enter: { opacity: 1, transform: \"translateY(0px)\" },\n        leave: { opacity: 0, transform: \"translateY(-15px)\" }\n    });\n\n    return (\n        <>\n            {transitions((props, item) => item && (\n                <StyledModalPage\n                    style={props}\n                    onClick={onDeactive}\n                    theme={themeData[theme]}\n                    className={className}\n                >\n                    {children}\n                </StyledModalPage>))\n            }\n        </>\n    )\n}\n\nexport default ModalPage","import React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { ThemeTypes } from 'types/theme';\nimport { themeState  } from 'store/theme';\n\nconst getButtonStyle = (theme: string, color: string) => {\n    switch(theme){\n        case 'light':\n        default:\n            return `\n                background-color: ${color};\n                color: white;\n            `\n        case 'dark':\n            return `\n                background-color: transparent;\n                color: ${color};\n                border: 1px solid ${color};\n            `\n    }\n}\n\ninterface StyledButtonProperty extends ButtonProperty {\n    themeType: ThemeTypes;\n}\n\nconst StyledButton = styled.button<StyledButtonProperty>`\n    cursor: pointer;\n    border-radius: 50px;\n    padding: 10px 20px;\n    margin: 0;\n    letter-spacing: 1px;\n    text-align: center;\n    transition: 0.3s all;\n    font-size: 13px;\n    ${({themeType, color}) => getButtonStyle(themeType, color)}\n\n    &.small {\n        padding: 5px 8px;\n    }\n`\n\ninterface ButtonProperty {\n    className?: string;\n    onClick: (e: React.MouseEvent<HTMLElement>) => void;\n    children: React.ReactNode;\n    color: string;\n    type?: 'submit' | 'button';\n    size?: 'normal' | 'small';\n}\n\nconst Button = (props: ButtonProperty ) => {\n    const [theme] = useRecoilState(themeState);\n    const { \n        className, \n        children, \n        onClick = () => {},\n        color,\n        type = 'button',\n        size = 'normal'\n    } = props\n\n    return (\n    <StyledButton\n        type={type}\n        themeType={theme}\n        color={color}\n        className={classnames(className, size)}\n        onClick={onClick}\n    >\n        {children}\n    </StyledButton>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from \"style/theme\";\n\ninterface InputProperty  {\n    className: string;\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    maxLength: number;\n    onFocus?: () => void;\n    placeholder?: string;\n}\nconst Input = (props: InputProperty) => {\n    const {\n        className,\n        value,\n        placeholder,\n        onChange = () => {},\n        onFocus = () => {},\n        maxLength = 10\n    } = props;\n\n    return (\n        <input\n            className={className}\n            maxLength={maxLength}\n            placeholder={placeholder}\n            onChange={onChange}\n            onFocus={onFocus}\n            value={value}\n            type=\"text\" />\n    )\n}\n\nconst styledInput = styled(Input)`\n    user-select: auto;\n    width: 50%;\n    display: block;\n    font-size: 13px;\n    text-align: center;\n    color: ${color.$title_font_color};\n    background-color: transparent;\n    border: none;\n    border-radius: 0;\n\n    &:active,\n    &:focus {\n        outline: none;\n    }\n`\n\nexport default styledInput;","import { useState } from 'react';\n\ntype Values = {\n    gameRoomName: string;\n    warnMessage: string;\n}\n\ntype Handlers = {\n    setRoomName: React.Dispatch<React.SetStateAction<string>>;\n    setWarnMessage: React.Dispatch<React.SetStateAction<string>>\n    validateRoomName: () => boolean;\n}\n\nconst useGameRoomName = (): [Values, Handlers] => {\n    const [gameRoomName, setRoomName] = useState('');\n    const [warnMessage, setWarnMessage] = useState('');\n\n    const validateRoomName = () => {\n        const regex = /^[^.]*$/g;\n        const isVaild = regex.test(gameRoomName);\n\n\t\tif (!isVaild) {\n\t\t\tsetWarnMessage('請勿輸入 . 作為房間名');\n\t\t\treturn false;\n\t\t}\n\n\t\tsetWarnMessage('');\n\t\treturn true;\n\t};\n\n    return [\n        { gameRoomName, warnMessage },\n        { setRoomName, setWarnMessage, validateRoomName }\n    ]\n}\n\nexport default useGameRoomName;\n","const generateUniqueId = () => Math.random().toString(36).substring(5,11);\n\nexport default generateUniqueId;","import {\n    atom, selector,\n} from 'recoil';\nimport { PlayerData, TeamTypes } from 'types/player';\n\nimport { userNameState } from './user';\n\nexport const playersData = atom({\n    key: 'playersData',\n    default: [] as PlayerData[],\n})\n\nexport const teamArray = selector({\n    key: 'teamState',\n    get: ({get}) => {\n        const team = get(playersData);\n        return team.map(data=>data.team);\n    }\n})\n\nexport const OrderedStartFromTeamOne = selector({\n    key: 'OrderedStartFromTeamOne',\n    get: ({get}) => {\n        const playerDataState = get(playersData);\n        const firstPlayer = playerDataState.filter(player=>player.team === TeamTypes.TeamOne)[0];\n        const secondPlayer = playerDataState.filter(player=>player.team === TeamTypes.TeamTwo)[0];\n        const thirdPlayer = playerDataState.filter(player=>player.team === TeamTypes.TeamOne)[1];\n        const lastPlayer = playerDataState.filter(player=>player.team === TeamTypes.TeamTwo)[1];\n        const result = [firstPlayer,secondPlayer,thirdPlayer,lastPlayer]\n            .map(playerData=>playerData.name);\n        return result\n    }\n})\n\nconst handleIndex = (index: number) => {\n    if(index > 3) {\n        return index - 4\n    } else {\n        return index\n    }\n}\n\nexport const relationWithUser = selector({\n    key: 'relationWithUser',\n    get: ({get}) => {\n        const playerDataState = get(OrderedStartFromTeamOne);\n        const user = get(userNameState);\n        const userIndex = playerDataState.indexOf(user);\n        const nextIndex = handleIndex(userIndex + 1);\n        const teammateIndex = handleIndex(userIndex + 2);\n        const previousIndex = handleIndex(userIndex + 3);\n        return {\n            user,\n            teammate: playerDataState[teammateIndex],\n            nextPlayer: playerDataState[nextIndex],\n            previousPlayer: playerDataState[previousIndex],\n        }\n    }\n})","export enum CardSuitType {\n\tSpade = 'spade',\n\tHeart = 'heart',\n\tDiamond = 'diamond',\n\tClub = 'club',\n}\n\nexport enum SuitColorType {\n\tRed = 'red',\n\tBlack = 'black',\n}\n\nexport type SuitColor =  SuitColorType.Black | SuitColorType.Red;\n\nexport type OtherPlayerDeck = {\n\t[key: string]: number;\n}\n\nexport interface Card {\n\tsuit: CardSuitType;\n\tnumber: number;\n}","import {\n    atom, selector,\n} from 'recoil';\n\nimport { playersData } from './players';\nimport { TeamTypes } from 'types/player';\n\nexport const userNameState = atom({\n    key: 'userNameState',\n    default: '' as string,\n});\n\nexport const userIDState = atom({\n    key: 'userIDState',\n    default: '' as string,\n});\n\nexport const userRoomState = atom({\n    key: 'userRoomState',\n    default: '' as string,\n});\n\nexport const userIndexState = selector({\n    key: 'userIndexState',\n    get: ({get}) => {\n        const userName = get(userNameState);\n        const playerList = get(playersData);\n        return playerList.findIndex(data=>data.name===userName) as number;\n    }\n})\n\nexport const userTeamState = selector({\n    key: 'userTeamState',\n    get:  ({get}) => {\n        const userName = get(userNameState);\n        const playerList = get(playersData);\n        if(!playerList.length) return null\n        return playerList.find(data=>data.name===userName)?.team as TeamTypes | null;\n    }\n})\n\nexport const navState = atom({\n    key: 'navState',\n    default: null as string | null,\n})","import { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport db from \"database\";\nimport { ref, update, child } from \"firebase/database\";\nimport { useHistory } from \"react-router-dom\";\nimport generateUniqueId from \"util/generateUniqueId\";\nimport { userIDState, userNameState, userRoomState } from \"store/user\";\n\ntype Values = {};\n\ntype Handlers = {\n  updateDbRoomData: (roomID: string, roomName?: string) => Promise<void>;\n};\n\nconst useFirebaseRoom = (): [Values, Handlers] => {\n  const setUserID = useSetRecoilState(userIDState);\n  const userName = useRecoilValue(userNameState);\n  const setLocalRoom = useSetRecoilState(userRoomState);\n  const history = useHistory();\n\n  const updateDbRoomData = async (roomID: string, roomName?: string) => {\n    const roomRef = ref(db, `/${roomID}`);\n    const userID = generateUniqueId() as string;\n    const current = new Date();\n    const timestamp = Date.parse(current.toString()) as number;\n    const userInfo = { timestamp, id: userID, name: userName };\n\n\t/* local */\n    setLocalRoom(roomID);\n    setUserID(userID);\n\n\t/* firebase */\n    if (roomName) {\n      await update(roomRef, {\n        roomName,\n        playersInfo: {\n          [userID]: userInfo,\n        },\n      });\n    } else {\n      await update(child(roomRef, `playersInfo/${userID}`), userInfo);\n    }\n\n    const toPath = `/w/${roomID}/${userID}`;\n    history.push(toPath);\n  };\n\n  return [{}, { updateDbRoomData }];\n};\n\nexport default useFirebaseRoom;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/theme'\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\n\nimport Modal from \"components/Global/atoms/Modal\";\nimport Button from 'components/Global/atoms/Button';\nimport Input from 'components/Global/atoms/Input';\n\nimport { RoomList } from 'types/room';\nimport userGameRoomName from \"util/hook/useGameRoomName\";\nimport useFirebaseRoom from \"util/hook/useFirebaseRoom\";\nimport generateUniqueId from \"util/generateUniqueId\";\nimport { userRoomState } from \"store/user\";\nimport { themeState } from 'store/theme';\n\nconst themeData = {\n\tlight: {\n\t\tbg: 'white',\n\t\tfg: color.$brown_color,\n\t\tboxBorder: 'none',\n\t\tcancel_bg: color.$warn_red_color,\n\t\tcancel_fg: 'white',\n\t\ttitle_bg: color.$pink_color,\n\t\ttitle_fg: 'white',\n\t\tsub_title_fg: '#888',\n\t\tsub_title_bb: color.$under_line_color,\n\t},\n\tdark: {\n\t\tbg: color.$dark_bg_color,\n\t\tfg: color.$fluorescent_pink_color,\n\t\tboxBorder: '1px solid' + color.$fluorescent_pink_color,\n\t\tcancel_bg: color.$dark_bg_color,\n\t\tcancel_fg: color.$fluorescent_pink_color,\n\t\ttitle_bg: color.$dark_bg_color,\n\t\ttitle_fg: color.$fluorescent_pink_color,\n\t\tsub_title_fg: '#E5D5D5',\n\t\tsub_title_bb: color.$dark_dim_border_color,\n\t},\n}\n\n\nconst Content = styled.div`\n\twidth: 80vw;\n\tposition: absolute;\n\tborder-radius: 10px;\n\toverflow: hidden;\n\tposition: relative;\n\tborder: ${({ theme }) => theme.boxBorder};\n\tbackground-color: ${({ theme }) => theme.bg};\n\n\t.cancel_button {\n\t\tfont-size: 14px;\n\t\tposition: absolute;\n\t\tcursor: pointer;\n\t\tborder-radius: 50%;\n\t\tpadding: 3px;\n\t\tright: 5px;\n\t\ttop: 5px;\n\t\tcolor: ${({ theme }) => theme.cancel_fg};\n\t\tborder: ${({ theme }) => theme.boxBorder};\n\t\tbackground-color: ${({ theme }) => theme.cancel_bg};\n\t}\n\n\t& > .title {\n\t\tpadding: 15px;\n\t\ttext-align: center;\n\t\tfont-size: 20px;\n\t\tletter-spacing: 2px;\n\t\tcolor: ${({ theme }) => theme.title_fg};\n\t\tbackground-color: ${({ theme }) => theme.title_bg};\n\t\tborder-bottom: ${({ theme }) => theme.box_border};\n\t}\n\n\t.block {\n\t\tpadding: 15px 15px 5px;\n\n\t\t.title {\n\t\t\tmargin: 0;\n\t\t\ttext-align: center;\n\t\t\tpadding-bottom: 5px;\n\t\t\tfont-size: 14px;\n\t\t\tletter-spacing: 1px;\n\t\t\tcolor: ${({ theme }) => theme.sub_title_fg};;\n\t\t\tborder-bottom: 1.5px solid ${({ theme }) => theme.sub_title_bb};\n\t\t}\n\n\t\t&.join_exist_room {\n\t\t\t.room_list {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tmargin-top: 10px;\n\t\t\t\tmax-height: 150px;\n\t\t\t\toverflow: scroll;\n\t\t\t}\n\n\t\t\t.no_room {\n\t\t\tmargin-top: 15px;\n\t\t\tcolor: ${color.$unable_color};\n\t\t\ttext-align: center;\n\t\t\tfont-size: 14px;\n\t\t\tletter-spacing: 1px;\n\t\t\t}\n\n\t\t\t.room {\n\t\t\tmargin-bottom: 10px;\n\t\t\tfont-size: 16px;\n\t\t\tletter-spacing: 1px;\n\t\t\t}\n\t\t}\n\n\t\t&.create_room {\n\t\t\t.content {\n\t\t\tpadding: 10px;\n\t\t\tbox-sizing: border-box;\n\n\t\t\t\tform {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\n\t\t\t\t\t.room_name {\n\t\t\t\t\t\tmargin-right: 20px;\n\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\tletter-spacing: 2px;\n\t\t\t\t\t\tcolor: ${({ theme }) => theme.fg};\n\t\t\t\t\t\tborder-bottom: 2px solid ${color.$unable_color};\n\n\t\t\t\t\t\t&::placeholder {\n\t\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\t\tcolor: ${color.$unable_color};\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\tmargin: 10px 0 0;\n\t\t\t\t\t\t\tletter-spacing: 2px;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.warn_message {\n\t\t\t\t\tmargin: 10px 0 0;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tletter-spacing: 1px;\n\t\t\t\t\tcolor: ${color.$warn_red_color};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\ninterface CreateButtonProperty {\n\tonClick: (e: React.MouseEvent<HTMLElement>) => void;\n\tclassName: string;\n\tisLengthValid: boolean;\n\tchildren: React.ReactNode;\n}\nconst CreateButton = (props: CreateButtonProperty) => {\n\tconst { onClick, className, isLengthValid } = props;\n\tconst [theme] = useRecoilState(themeState);\n\tconst getButtonColor = () => {\n\t\tswitch (theme) {\n\t\t\tcase 'light':\n\t\t\tdefault:\n\t\t\t\treturn isLengthValid ? color.$highlight_color : color.$unable_color;\n\t\t\tcase 'dark':\n\t\t\t\treturn isLengthValid ? color.$fluorescent_pink_color : color.$dark_dim_border_color;\n\t\t}\n\t};\n\treturn (\n\t\t<Button\n\t\t\tcolor={getButtonColor()}\n\t\t\tonClick={(e) => {\n\t\t\t\tif (!isLengthValid) return;\n\t\t\t\tonClick(e)\n\t\t\t}}\n\t\t\tclassName={className}\n\t\t>建立</Button>\n\t)\n};\n\ninterface RoomButtonProperty {\n\tonClick: () => void;\n\tclassName: string;\n\troomName: string;\n}\n\nconst RoomButton = (props: RoomButtonProperty) => {\n\tconst { onClick, className, roomName } = props;\n\tconst [theme] = useRecoilState(themeState);\n\tconst getButtonColor = () => {\n\t\tswitch (theme) {\n\t\t\tcase 'light':\n\t\t\tdefault:\n\t\t\t\treturn color.$green_color\n\t\t\tcase 'dark':\n\t\t\t\treturn color.$fluorescent_pink_color\n\t\t}\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\tclassName={className}\n\t\t\tonClick={onClick}\n\t\t\tcolor={getButtonColor()}>\n\t\t\t{roomName}\n\t\t</Button>)\n}\n\ninterface RoomDialogProperty {\n\tclassName: string;\n\tactive: Boolean;\n\troomList: RoomList;\n\tcloseRoomList: (e: React.MouseEvent<HTMLElement>) => void;\n}\nconst RoomDialog = (props: RoomDialogProperty) => {\n\tconst { active, className, closeRoomList, roomList } = props;\n\tconst [theme] = useRecoilState(themeState);\n\tconst [\n\t\t{ gameRoomName, warnMessage },\n\t\t{ setRoomName, validateRoomName, setWarnMessage }\n\t] = userGameRoomName();\n\tconst [,{ updateDbRoomData }] = useFirebaseRoom();\n\tconst setLocalRoom = useSetRecoilState(userRoomState);\n\n\tconst createRoom = (e: React.MouseEvent<HTMLElement>) => {\n\t\te.preventDefault();\n\t\tconst isValid = validateRoomName();\n\n\t\tif (isValid) {\n\t\t\tconst roomID = generateUniqueId();\n\t\t\tsetLocalRoom(roomID);\n\t\t\tupdateDbRoomData(roomID, gameRoomName);\n\t\t}\n\t}\n\n\tconst pickExistRoom = (roomID: string) => {\n\t\tsetLocalRoom(roomID);\n\t\tupdateDbRoomData(roomID);\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\tactive={active}\n\t\t\tonDeactive={(e: React.MouseEvent<HTMLElement>) => {\n\t\t\t\tcloseRoomList(e);\n\t\t\t}}\n\t\t\tclassName={className}>\n\t\t\t<Content\n\t\t\t\ttheme={themeData[theme]}\n\t\t\t\tonClick={e => e.stopPropagation()}\n\t\t\t\tclassName=\"content\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={(e) => closeRoomList(e)}\n\t\t\t\t\tclassName=\"cancel_button\">×</button>\n\t\t\t\t<div className=\"title\">選擇或創建房間</div>\n\t\t\t\t<div className=\"room_choose\">\n\t\t\t\t\t<div className=\"block join_exist_room\">\n\t\t\t\t\t\t<p className=\"title\">選擇已經存在的房間</p>\n\t\t\t\t\t\t{!roomList.length\n\t\t\t\t\t\t\t? <p className=\"no_room\">目前尚無空房</p>\n\t\t\t\t\t\t\t: <div className=\"room_list\">\n\t\t\t\t\t\t\t\t{roomList.map(room => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<RoomButton\n\t\t\t\t\t\t\t\t\t\t\tkey={room.roomID}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => pickExistRoom(room.roomID)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"room\"\n\t\t\t\t\t\t\t\t\t\t\troomName={room.roomName} />)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"block create_room\">\n\t\t\t\t\t\t<p className=\"title\">建立一個房間</p>\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName=\"room_name\"\n\t\t\t\t\t\t\t\t\tvalue={gameRoomName}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetWarnMessage('');\n\t\t\t\t\t\t\t\t\t\tsetRoomName(e.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\t\t\tplaceholder=\"請輸入3-20字元\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CreateButton\n\t\t\t\t\t\t\t\t\tclassName='create_button'\n\t\t\t\t\t\t\t\t\tisLengthValid={gameRoomName.length > 2}\n\t\t\t\t\t\t\t\t\tonClick={e => createRoom(e)}\n\t\t\t\t\t\t\t\t>建立</CreateButton>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t{warnMessage && <p className='warn_message'>{warnMessage}</p>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div >\n\t\t\t</Content >\n\t\t</Modal >\n\t);\n}\n\nexport default RoomDialog;","import { useState } from 'react';\nimport { useRecoilState } from \"recoil\";\nimport { userNameState } from \"store/user\";\n\ntype Values = {\n    userName: string;\n    warnMessage: string;\n}\n\ntype Handlers = {\n    setUserName: React.Dispatch<React.SetStateAction<string>>;\n    setWarnMessage: React.Dispatch<React.SetStateAction<string>>\n    validateUserName: () => boolean;\n}\n\nconst useUserName = (): [Values, Handlers] => {\n    const [userName, setUserName] = useRecoilState(userNameState);\n    const [warnMessage, setWarnMessage] = useState('');\n\n    const validateUserName = () => {\n        const regex = /^[^.]*$/g;\n        const isVaild = regex.test(userName);\n\n        if (!userName) {\n            setWarnMessage('請輸入至少一個字');\n\t\t\treturn false;\n        }\n\n\t\tif (!isVaild) {\n\t\t\tsetWarnMessage('請勿輸入 . 作為名字');\n\t\t\treturn false;\n\t\t}\n\n\t\tsetWarnMessage('');\n\t\treturn true;\n\t};\n\n    return [\n        { userName, warnMessage },\n        { setUserName, setWarnMessage, validateUserName }\n    ]\n}\n\nexport default useUserName;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport Input from \"components/Global/atoms/Input\";\nimport Button from \"components/Global/atoms/Button\";\n\nimport useUserName from \"util/hook/useUserName\";\nimport { themeState } from 'store/theme';\nimport styled from \"styled-components\";\nimport { color } from \"style/theme\";\n\nconst themeData = {\n\tlight: {\n\t\tfg: color.$title_font_color,\n\t\tname_fg: color.$title_font_color,\n\t\tborder: color.$title_font_color,\n\t\tbutton_color: color.$pink_color,\n\t},\n\tdark: {\n\t\tfg: color.$dark_default_font_color,\n\t\tname_fg: color.$fluorescent_pink_color,\n\t\tborder: color.$dark_border_color,\n\t\tbutton_color: color.$fluorescent_pink_color,\n\t},\n}\n\nconst NameForm = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\tp {\n\t\tfont-size: 22px;\n\t\tletter-spacing: 3px;\n\t\tmargin: 0 0 25px 0;\n\t\ttransition: .3s all;\n\t\tcolor: ${({ theme }) => theme.fg};\n\t}\n\n\t.name_space{\n\t\tpadding: 5px;\n\t\tfont-size: 22px;\n\t\tline-height: 25px;\n\t\tletter-spacing: 2px;\n\t\tcolor: ${({ theme }) => theme.name_fg};\n\t\tborder-bottom: 2px solid ${({ theme }) => theme.border};\n\t}\n\n\t.warn_message {\n\t\tmargin-top: 10px;\n\t\tcolor: ${({ theme }) => theme.name_fg};\n\t\topacity: 0.6;\n\t\tletter-spacing: 1px;\n\t}\n\n\t.enter_button {\n\t\tmargin-top: 20px;\n        min-width: 50%;\n        font-size: 18px;\n        letter-spacing: 3px;\n\t}\n`;\n\ninterface NameFillInProperty {\n\tonEnter: () => void;\n    buttonText: string;\n    actionText?: string;\n}\n\nconst NameFillIn = (props: NameFillInProperty) => {\n\tconst { onEnter, actionText, buttonText } = props;\n\tconst [\n\t\t{ userName, warnMessage },\n\t\t{ setUserName, validateUserName, setWarnMessage }\n\t] = useUserName();\n\n\tconst theme = useRecoilValue(themeState);\n\tconst handleButtonClick = (e: React.MouseEvent<HTMLElement>) => {\n\t\te.preventDefault();\n\t\tconst isValid = validateUserName();\n\n\t\tif (isValid) {\n\t\t\tonEnter();\n\t\t}\n\t};\n\n\treturn (\n\t\t<NameForm theme={themeData[theme]} id=\"name\" className=\"user_input\">\n\t\t\t{actionText && <p>{actionText}</p>}\n\t\t\t<Input\n\t\t\t\tclassName=\"name_space\"\n\t\t\t\tonFocus={() => setWarnMessage('')}\n\t\t\t\tmaxLength={8}\n\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\tvalue={userName}\n\t\t\t/>\n\t\t\t{warnMessage && <span className=\"warn_message\">{warnMessage}</span>}\n\t\t\t<Button\n\t\t\t\tclassName=\"enter_button\"\n\t\t\t\tcolor={themeData[theme].button_color}\n\t\t\t\tonClick={handleButtonClick}\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\t{buttonText}\n\t\t\t</Button>\n\t\t</NameForm>\n\t);\n};\n\nexport default NameFillIn","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/theme';\nimport classnames from 'classnames';\nimport { themeState } from 'store/theme';\nimport { ThemeTypes } from 'types/theme';\nimport { useRecoilState } from 'recoil';\nimport { useEffect } from 'react';\n\n\nconst Toggler = styled.div`\n    display: flex;\n    align-items: center;\n    width: 40px;\n    height: 17px;\n    padding: 2px;\n    border-radius: 40px;\n    transition: 0.3s all;\n    cursor: pointer;\n\n    .toggle_button {\n        background-color: white;\n        width: 17px;\n        height: 17px;\n        border-radius: 100%;\n        transition: 0.3s all;\n        cursor: pointer;\n        padding: 0;\n    }\n\n    &.light_mode {\n        background-color: ${color.$pink_color};\n        border: 1px solid transparent;\n        justify-content: flex-start;\n        .toggle_button {\n            margin-left: 0;\n        }\n    }\n\n    &.dark_mode {\n        background-color: ${color.$dark_dim_bg_color};\n        border: 1px solid ${color.$dark_border_color};\n        .toggle_button {\n            margin-left: calc( 40px - 17px);\n        }\n    }\n`\ninterface ThemeTogglerProperty {\n    className?: string;\n}\n\nconst ThemeToggler = (props: ThemeTogglerProperty) => {\n    const { className } = props;\n    const [theme, toggleTheme] = useRecoilState(themeState);\n\n    useEffect(() => {\n        localStorage.setItem('cake-and-bridge-theme', JSON.stringify(theme));\n    }, [theme]);\n\n    return (\n        <Toggler\n            onClick={() => toggleTheme((pre) => {\n                return pre === ThemeTypes.Light\n                    ? ThemeTypes.Dark\n                    : ThemeTypes.Light;\n            })}\n            className={classnames(\"theme_toggler\", className, {\n                'light_mode': theme === ThemeTypes.Light,\n                'dark_mode': theme === ThemeTypes.Dark,\n            })}>\n            <button className=\"toggle_button\" />\n        </Toggler>\n    )\n}\n\nexport default ThemeToggler;","import {\n    atom\n} from 'recoil';\n\nexport const modalState = atom({\n    key: 'modalState',\n    default: null as string | null,\n});","import {\n    atom, selector,\n} from 'recoil';\n\nimport { Card, OtherPlayerDeck } from 'types/card';\n\nexport const userDeckState = atom({\n    key: 'userDeckState',\n    default: [] as Card[],\n});\n\n\n\nexport const otherPlayerDeckState = atom({\n    key: 'otherPlayerDeckState',\n    default: {} as OtherPlayerDeck,\n});\n\nexport const badDeck = selector({\n    key: 'backDeck',\n    get: ({ get }) => {\n        const userDeck = get(userDeckState);\n        if (userDeck.length === 13) {\n            const deckPoint = userDeck\n                .map((card) => card.number)\n                .reduce((a, b) => {\n                    const point = b > 9 ? b - 9 : 0;\n                    return a + point;\n                }, 0);\n            return deckPoint > 3 ? false : true;\n        } else {\n            return false;\n        }\n    }\n});\n\nexport const responseToBadDeck = atom({\n    key: 'responseToBadDeck',\n    default: null as Boolean | null,\n})\n\nexport const OKtoPlay = selector({\n    key: 'OKtoPlay',\n    get: ({ get }) => {\n        const isBadLuck = get(badDeck);\n        if(!isBadLuck) {\n            return true;\n        } else {\n            const isOKtoPlayWithBadDeck = get(responseToBadDeck);\n            if(isOKtoPlayWithBadDeck){\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n});","import {\n    atom, selector\n} from 'recoil';\n\nimport { CardSuitType, Card } from 'types/card';\nimport { CalledBind } from 'types/bind';\nimport { playersData } from './players';\nimport { TeamTypes } from 'types/player';\n\nexport const userPickBindState = atom({\n    key: 'userPickBind',\n    default: null as null | Card,\n});\n\nexport const nowBindState = atom({\n    key: 'nowBindState',\n    default: { player: null, number:0, suit: CardSuitType.Club },\n});\n\nexport const playersCalledListState = atom({\n    key: 'playersCalledListState',\n    default: {} as { [key: string]: CalledBind[] },\n});\n\nexport const availibleTricksState = selector({\n    key: 'availibleTricksState',\n    get: ({get}) => {\n        const { number, suit} = get(nowBindState);\n        const tricks = [1, 2, 3, 4, 5, 6]\n        let min: number;\n        if(suit === CardSuitType.Spade) {\n            min =  number + 1;\n        } else {\n            min =  number;\n        }\n        const tricksArray = tricks.filter(trick => trick >= min)\n        return tricksArray;\n    }},\n);\n\nexport const teamShouldWinState = selector({\n    key: 'teamShouldWinState',\n    get: ({get}) => {\n        const {player: calledPlayer, number} = get(nowBindState);\n        if(!number || number === 1 ){\n            return {\n                team1: 7,\n                team2: 7,\n            }\n        }\n        const players = get(playersData);\n        const calledTeam = players.find(p => p.name === calledPlayer)?.team || TeamTypes.TeamOne;\n        const anotherTeam = [TeamTypes.TeamOne,TeamTypes.TeamTwo].filter(team=> team !== calledTeam)[0];\n        const calledTeamShouldWin = 6 + number;\n        const anotherTeamShouldWin = 14 - calledTeamShouldWin;\n        return {\n            [calledTeam]: calledTeamShouldWin,\n            [anotherTeam]: anotherTeamShouldWin\n        }\n    }},\n);","export enum ReadyTypes {\n\tEnterGame = 'enterGame',\n\tOneMoreGame = 'oneMoreGame',\n}\n\nexport enum GameStatusTypes {\n\tEnterGame = 'enterGame',\n\tOneMoreGame = 'oneMoreGame',\n\tChangeMate = 'changeMate',\n\tSomeoneLeaveGame = 'someoneLeaveGame',\n\tRestart = 'restart',\n}\n\nexport enum NavigatorTypes {\n\tWonTricks = 'wintricks',\n\tSettings = 'settings',\n}","import {\n    atom\n} from 'recoil';\n\nimport { ScoreData } from 'types/score';\n\nconst defaultState: ScoreData = { team1: 0, team2: 0}\n\nexport const teamScoresState = atom({\n    key: 'teamScoresState',\n    default: defaultState\n});","import {\n    atom, selector,\n} from 'recoil';\nimport { CardSuitType, Card } from 'types/card'\nimport { userNameState } from './user';\nimport { teamShouldWinState } from './bind';\nimport { teamScoresState } from './score';\nimport { TeamTypes } from 'types/player';\n\nexport const currentPlayerName = atom({\n    key: 'currentPlayerName',\n    default: '' as string,\n});\n\nexport const thisRoundSuitState = atom({\n    key: 'thisRoundSuit',\n    default: null as null | CardSuitType,\n});\n\nexport const thisRoundCardsState = atom({\n    key: 'thisRoundCardsState',\n    default: [] as Card[],\n});\n\nexport const trumpState = atom({\n    key: 'trumpState',\n    default: null as null | Card,\n})\n\nexport const isUserTurnState = selector({\n    key: 'isUserTurnState',\n    get: ({get}) => {\n        const nowPlayer = get(currentPlayerName);\n        const userName = get(userNameState);\n        return userName === nowPlayer;\n    }\n})\n\nexport const isUserLastPlayerState = selector({\n    key: 'isUserLastPlayerState',\n    get: ({get}) => {\n        const thisRoundCards = get(thisRoundCardsState);\n        if(thisRoundCards.filter(card => typeof card === 'object').length === 3) {\n            return true\n        } else {\n            return false\n        }\n    }\n});\n\nexport const isThisRoundEndState = selector({\n    key: 'isThisRoundEndState',\n    get: ({get}) => {\n        const thisRoundCards = get(thisRoundCardsState);\n        if(thisRoundCards.filter(card => typeof card === 'object').length === 4) {\n            return true\n        } else {\n            return false\n        }\n    }\n})\n\nexport const isGameEndState = selector({\n    key: 'isGameEndState',\n    get: ({ get }) => {\n        const { team1: team1ShouldWin, team2: team2ShouldWin } = get(teamShouldWinState);\n        const { team1: team1Score, team2: team2Score } = get(teamScoresState);\n\n        if(team1ShouldWin === team1Score){\n            return TeamTypes.TeamOne;\n        } else if (team2ShouldWin === team2Score) {\n            return TeamTypes.TeamTwo;\n        } else {\n            return null;\n        }\n    }\n})\n","import { atom } from 'recoil';\nimport { Card } from 'types/card';\n\nexport const userWinTricksState = atom({\n    key: 'userWinTricksState',\n    default: [] as Card[][],\n});\n","import { useResetRecoilState } from \"recoil\";\nimport { userNameState, userRoomState, userIDState } from 'store/user';\nimport { modalState } from 'store/modal';\nimport { userDeckState } from 'store/deck';\nimport { thisRoundCardsState, trumpState } from 'store/game';\nimport { playersData } from 'store/players';\nimport { teamScoresState } from 'store/score';\nimport { userWinTricksState } from 'store/winTricks';\nimport {  userPickBindState, nowBindState, playersCalledListState } from 'store/bind';\n\n\nconst useInitData = () => {\n    const initUserName = useResetRecoilState(userNameState);\n\tconst initUserRoom = useResetRecoilState(userRoomState);\n\tconst initUserID = useResetRecoilState(userIDState);\n    const initModalType = useResetRecoilState(modalState);\n    const initUserDeck = useResetRecoilState(userDeckState);\n    const initScore = useResetRecoilState(teamScoresState);\n    const initUserPickBind = useResetRecoilState(userPickBindState);\n    const initNowBind = useResetRecoilState(nowBindState);\n    const initRoundCards = useResetRecoilState(thisRoundCardsState);\n    const initTrump = useResetRecoilState(trumpState);\n    const initCalledList = useResetRecoilState(playersCalledListState);\n    const initWinTricks = useResetRecoilState(userWinTricksState);\n    const initPlayerData = useResetRecoilState(playersData);\n\n    const initUserData = () => {\n        initUserName();\n\t\tinitUserRoom();\n        initUserID();\n    }\n\n    const initGameRoomData = () => {\n        initUserDeck();\n        initModalType();\n        initScore();\n        initUserPickBind();\n        initNowBind();\n        initCalledList();\n        initRoundCards();\n        initTrump();\n        initWinTricks();\n    }\n\n    const initGameData = () => {\n        initUserData();\n        initGameRoomData();\n        initPlayerData();\n    }\n\n    return [{ initGameData, initGameRoomData }]\n}\n\nexport default useInitData;","import React, { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport db, { getFirebaseData } from \"database\";\nimport { ref, set, off, onValue } from \"firebase/database\";\n\nimport Logo from \"components/Home/Logo\";\nimport RoomDialog from \"components/Home/RoomDialog\";\nimport NameFillIn from \"components/Global/molecules/NameFillin\";\nimport ThemeToggler from \"components/Global/atoms/ThemeToggler\";\n\nimport { RoomList, FirebaseRoomsData } from \"types/room\";\n\nimport useInitData from \"util/hook/useInitData\";\nimport { themeState } from \"store/theme\";\nimport styled from \"styled-components\";\nimport { color } from \"style/theme\";\n\nconst themeData = {\n  light: {\n    bg: color.$theme_background,\n  },\n  dark: {\n    bg: color.$dark_bg_color,\n  },\n};\n\nconst HomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  transition: 0.3s background-color;\n  background-color: ${({ theme }) => theme.bg};\n\n  .toggler {\n    position: absolute;\n    right: 20px;\n    top: 20px;\n  }\n\n  .logo {\n    margin: 0 auto;\n  }\n`;\n\nconst Home = () => {\n  const [showRoomDialog, toggleRoomDialog] = useState<boolean>(false);\n  const [roomList, setRoomList] = useState<RoomList>([]);\n  const [{ initGameData }] = useInitData();\n  const theme = useRecoilValue(themeState);\n  const firebaseRef = ref(db, \"/\");\n\n  React.useEffect(() => {\n    getFirebaseData();\n    initGameData();\n    subscribeRooms();\n    return () => removeListeners();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const subscribeRooms = () => {\n    onValue(firebaseRef, async (snapshot) => {\n      const roomsData = snapshot.val() as FirebaseRoomsData;\n\n      if (!roomsData) {\n        setRoomList([]);\n        return;\n      }\n\n      const filterOutAbandonedRoom = Object.entries(roomsData)\n        .filter((data) => data[1].playersInfo)\n        .reduce(\n          (obj, data) => ({\n            ...obj,\n            [data[0]]: data[1],\n          }),\n          {}\n        );\n\n      await set(firebaseRef, filterOutAbandonedRoom);\n\n      const rooms = Object.entries(roomsData)\n        .map((room) => ({\n          roomID: room[0],\n          ...room[1],\n        }))\n        .filter((room) => {\n          return room.playersInfo && Object.values(room.playersInfo).length < 4;\n        });\n\n      setRoomList(rooms as RoomList);\n    });\n  };\n\n  const removeListeners = () => {\n    off(firebaseRef);\n  };\n\n  return (\n    <HomePage theme={themeData[theme]}>\n      <ThemeToggler className=\"toggler\" />\n      <Logo className=\"logo\" />\n      <NameFillIn\n        actionText=\"請輸入名字\"\n        buttonText=\"加入遊戲\"\n        onEnter={() => toggleRoomDialog(true)}\n      />\n      <RoomDialog\n        active={showRoomDialog}\n        roomList={roomList}\n        className=\"room_list_dialog\"\n        closeRoomList={() => toggleRoomDialog(false)}\n      />\n    </HomePage>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport classnames from 'classnames'\nimport styled from 'styled-components';\nimport { color } from 'style/theme'\nimport { TeamTypes, PlayerData } from 'types/player';\nimport { playersData } from 'store/players';\nimport { useRecoilValue, useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\n\nconst themeData = {\n    light: {\n        w_border: 'none',\n        st_bg: 'rgb(241, 224, 224)',\n        st_border: 'none',\n        cl_bg: 'rgb(206, 190, 180)',\n        cl_border: 'none',\n        name_bg: 'white',\n        name_st_fg: color.$title_font_color,\n        name_cl_fg: color.$title_font_color,\n        ready_fg: color.$title_font_color,\n        ready_bg: '#F3DE93',\n        ready_border: '2px solid white',\n    },\n    dark: {\n        w_border: '1px solid' + color.$dark_dim_border_color,\n        st_bg: color.$dark_dim_bg_color,\n        st_border: '1px solid' + color.$fluorescent_pink_color,\n        cl_bg: color.$dark_dim_bg_color,\n        cl_border: '1px solid' + color.$fluorescent_yellow_color,\n        name_bg: 'transparent',\n        name_st_fg: color.$fluorescent_pink_color,\n        name_cl_fg: color.$fluorescent_yellow_color,\n        ready_fg: color.$title_font_color,\n        ready_bg: 'transparent',\n        ready_border: '2px solid white',\n    },\n}\n\nconst Window = styled.div`\n    border-radius: 5px;\n    overflow: hidden;\n    display: flex;\n    flex-wrap: wrap;\n    width: 90vw;\n    height: 90vw;\n    background-color: ${({ theme }) => theme.st_bg};\n    border: ${({ theme }) => theme.w_border};\n    margin-bottom: 10px;\n\n    .player {\n        flex-basis: 50%;\n        height: 45vw;\n        display: flex;\n        flex-direction: column;\n        letter-spacing: 1px;\n        justify-content: flex-end;\n        align-items: stretch;\n        transition: all 0.3s;\n        position: relative;\n        padding: 15px;\n        box-sizing: border-box;\n\n        &:nth-child(1) {\n            border-right: ${({ theme }) => theme.w_border};\n            border-bottom: ${({ theme }) => theme.w_border};\n        }\n\n        &:nth-child(2) {\n            border-bottom: ${({ theme }) => theme.w_border};\n        }\n\n        &:nth-child(3) {\n            border-right: ${({ theme }) => theme.w_border};\n        }\n\n        &.strawberry_team {\n            background-color: ${({ theme }) => theme.st_bg};\n            \n            .player__name {\n                color: ${({ theme }) => theme.name_st_fg};\n                border: ${({ theme }) => theme.st_border};\n            }\n        }\n\n        &.canele_team {\n            background-color: ${({ theme }) => theme.cl_bg};\n            .player__name {\n                color: ${({ theme }) => theme.name_cl_fg};\n                border: ${({ theme }) => theme.cl_border};\n            }\n        }\n\n        &__name {\n            text-align: center;\n            flex: 0 1 auto;\n            border: 2px solid transparent;\n            border-radius: 20px;\n            font-size: 20px;\n            padding: 7px 10px;\n            margin: 0;\n            position: relative;\n            transition: 0.3s all;\n            background-color: ${({ theme }) => theme.name_bg};\n        }\n    }    \n`\n\ninterface PlayerBoxProperty {\n    order: PlayerOrders.First | PlayerOrders.Second | PlayerOrders.Third | PlayerOrders.Fourth;\n    playerData: PlayerData;\n}\n\nenum PlayerOrders {\n    First,\n    Second,\n    Third,\n    Fourth\n}\nconst PlayerBox = (props: PlayerBoxProperty) => {\n    const { order, playerData } = props;\n    const playerName = playerData ? playerData.name : '';\n\n    const defaultTeam =\n        order === PlayerOrders.First || order === PlayerOrders.Fourth\n            ? TeamTypes.TeamOne\n            : TeamTypes.TeamTwo;\n    const playerTeam = playerData ? playerData.team : defaultTeam\n\n    return (\n        <div\n            className={classnames(\n                'player',\n                `player__${order}`, {\n                'strawberry_team': playerTeam === TeamTypes.TeamOne,\n                'canele_team': playerTeam === TeamTypes.TeamTwo,\n            })}>\n            {playerName &&\n                <p className={classnames('player__name', { 'ready_to_go': playerData.ready })}>\n                    {playerName}\n                </p>\n            }\n        </div>\n    )\n}\n\nconst PlayerWindow = () => {\n    const [theme] = useRecoilState(themeState);\n    const playerList = useRecoilValue(playersData);\n    const playersOrder = [PlayerOrders.First, PlayerOrders.Second, PlayerOrders.Third, PlayerOrders.Fourth];\n    return (\n        <Window\n            theme={themeData[theme]}\n            className=\"player_window\">\n            {playersOrder.map((order, index) => (\n                <PlayerBox \n                    key={order} \n                    order={order}\n                    playerData={playerList[index]} \n                />))}\n        </Window >\n    )\n};\n\nexport default PlayerWindow;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Icon = styled.span<ShareIconProperty>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    background-color: ${props=>props.backgroundColor};\n\n    .outer {\n        display: flex;\n        justify-content: center;\n        width: 14px;\n        height: 7px;\n        box-sizing: border-box;\n        border-radius: 7px;\n        border: 1px solid ${props=>props.iconColor};\n        position: relative;\n\n        &::before {\n            content: '';\n            display: block;\n            height: calc(100% + 4px);\n            width: 3px;\n            background-color: ${props=>props.backgroundColor};\n            position: absolute;\n            top: -2px;\n            left: 50%;\n            transform: translateX(-50%);\n        }\n\n        .inner {\n            width: 6px;\n            height: 1px;\n            margin: auto;\n            background-color: ${props=>props.iconColor};\n            z-index: 2;\n        }\n    }\n\n`\n\ninterface ShareIconProperty {\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nconst ShareIcon = (props: ShareIconProperty) => {\n    const { backgroundColor = 'white', iconColor = 'black' } = props;\n    return (\n        <Icon\n            backgroundColor={backgroundColor}\n            iconColor={iconColor}\n        >\n            <span className=\"outer\">\n                <span className=\"inner\" />\n            </span>\n        </Icon>\n    )\n};\n\nexport default ShareIcon;\n","const sleep = (ms: number) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default sleep;","import React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport styled from 'styled-components';\nimport { useRecoilValue } from 'recoil';\n\nimport { themeState } from 'store/theme';\nimport { userRoomState } from 'store/user';\nimport ShareIcon from \"components/Global/atoms/ShareIcon\";\nimport Button from \"components/Global/atoms/Button\";\nimport { color } from 'style/theme';\nimport { useState } from \"react\";\nimport { ThemeTypes } from \"types/theme\";\nimport sleep from \"util/sleep\";\n\nconst themeData = {\n    light: {\n        button_color: '#F0E7CF',\n        icon_color: color.$brown_color,\n        fg: color.$brown_color,\n        modal_color: '#D4EFA8',\n    },\n    dark: {\n        button_color: color.$highlight_color,\n        icon_color: color.$highlight_color,\n        fg: color.$highlight_color,\n        modal_color: color.$fluorescent_green_color,\n    },\n}\n\nconst Toast = styled(animated.div)`\n    z-index: 20;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 100%;\n    text-align: center;\n    padding: 10px 0;\n    background-color: ${({ theme }) => theme.modal_color};\n    color: white;\n    font-weight: 600;\n    letter-spacing: 1px;\n`\n\ninterface SuccessToastProperty {\n    active: boolean;\n    theme: ThemeTypes;\n}\n\nconst SuccessToast = (props: SuccessToastProperty) => {\n    const { active, theme } = props;\n    const transitions = useTransition(active, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 }\n    });\n\n    return (\n        <>\n            {transitions((props, item) => item && (\n                <Toast\n                    style={props}\n                    theme={themeData[theme]}\n                >\n                    COPIED!\n                </Toast>))\n            }\n        </>\n    )\n}\n\nconst Content = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    span:first-child {\n        margin-right: 2px;\n    }\n\n    span:last-child {\n        font-size: 12px;\n        color: ${({ theme }) => theme.fg}\n    }\n`\n\ninterface SendInviteLinkButtonProperty {\n    className: string;\n}\n\nconst SendInviteLinkButton = (props: SendInviteLinkButtonProperty) => {\n    const { className } = props;\n    const theme = useRecoilValue(themeState);\n    const roomId = useRecoilValue(userRoomState);\n    const [isCopied, setIsCopied] = useState(false);\n\n    const copyInviteLink = (id: string) => {\n        const inviteLink = `https://jyun1desu.github.io/cake-and-bridge-for-life/#/i/${id}`\n        navigator.clipboard.writeText(inviteLink).then(async () => {\n            setIsCopied(true);\n            await sleep(2000);\n            setIsCopied(false);\n        })\n    }\n\n    return (\n        <>\n            <SuccessToast theme={theme} active={isCopied} />\n            <Button\n                className={className}\n                size=\"small\"\n                onClick={() => copyInviteLink(roomId)}\n                color={themeData[theme].button_color}\n            >\n                <Content\n                    theme={themeData[theme]}\n                    className=\"button_content\"\n                >\n                    <ShareIcon\n                        backgroundColor={theme === ThemeTypes.Light ? themeData[theme].button_color : color.$dark_bg_color}\n                        iconColor={themeData[theme].icon_color}\n                    />\n                    <span>複製邀請連結</span>\n                </Content>\n            </Button>\n        </>\n    )\n}\n\nexport default SendInviteLinkButton","import React from \"react\";\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\n\nconst themeData = {\n    light: {\n        bg: 'white',\n        border: '#dcdcdc',\n    },\n    dark: {\n        bg: color.$dark_dim_bg_color,\n        border: color.$dark_dim_border_color,\n    },\n}\n\nconst StyledRadio = styled.span<RadioProperty>`\n    vertical-align: middle;\n    display: inline-block;\n    cursor: pointer;\n    position: relative;\n    display: inline-block;\n    border-radius: 100%;\n    width: ${(props) => (`${props.size}px`)};\n    height: ${(props) => (`${props.size}px`)};\n    margin-right: ${(props) => (`${props.marginRight}px`)};\n    transition: 0.3s all;\n    background-color: ${({ theme }) => theme.bg};\n    border: ${({ border }) => border};\n\n    &::after {\n        content: \"\";\n        display: block;\n        width: 70%;\n        height: 70%;\n        border-radius: 50%;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n`\n\ninterface RadioProperty {\n    className?: string;\n    size: number;\n    marginRight: number;\n    border: string;\n}\n\nconst Radio = (props: RadioProperty) => {\n    const { className, size, marginRight, border } = props;\n    const [theme] = useRecoilState(themeState);\n    return (\n        <StyledRadio\n            theme={themeData[theme]}\n            border={border}\n            size={size}\n            marginRight={marginRight}\n            className={className}\n        ></StyledRadio>\n    )\n}\n\nexport default Radio;","import React from \"react\";\nimport classnames from \"classnames\";\nimport styled from \"styled-components\";\nimport db from \"database\";\nimport {\n  child,\n  ref,\n  update,\n} from \"firebase/database\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nimport { Team, TeamTypes } from \"types/player\";\nimport { themeState } from \"store/theme\";\nimport { userTeamState } from \"store/user\";\nimport { color } from \"style/theme\";\nimport Radio from \"components/Global/atoms/Radio\";\n\nconst themeData = {\n  light: {\n    default_f: \"#A7A7A7\",\n    st_fg: color.$pink_color,\n    cl_fg: color.$brown_color,\n  },\n  dark: {\n    default_f: \"#787878\",\n    st_fg: color.$fluorescent_pink_color,\n    cl_fg: color.$fluorescent_yellow_color,\n  },\n};\n\nconst StyledRadio = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  letter-spacing: 1px;\n  transition: 0.3s all;\n  color: ${({ theme }) => theme.default_f};\n\n  &.chosen {\n    &.team1 {\n      color: ${({ theme }) => theme.st_fg};\n\n      .radio::after {\n        transition: 0.3s all;\n        background-color: ${({ theme }) => theme.st_fg};\n      }\n    }\n\n    &.team2 {\n      color: ${({ theme }) => theme.cl_fg};\n\n      .radio::after {\n        transition: 0.3s all;\n        background-color: ${({ theme }) => theme.cl_fg};\n      }\n    }\n  }\n`;\nconst RadioArea = styled.div`\n  align-self: flex-start;\n  width: 100%;\n\n  .options {\n    display: flex;\n    width: 100%;\n    justify-content: space-around;\n    font-size: 0;\n  }\n`;\n\ninterface TeamOptionProperty {\n  team: \"草莓糕\" | \"可麗露\";\n  isChosen: boolean;\n  teamIndex: Team;\n  onClick: () => void;\n}\n\nconst TeamOption = (props: TeamOptionProperty) => {\n  const { team, isChosen, onClick = () => {}, teamIndex } = props;\n  const [theme] = useRecoilState(themeState);\n  const getBorder = () => {\n    switch (theme) {\n      case \"light\":\n      default:\n        return \"none\";\n      case \"dark\":\n        if (isChosen) {\n          return `1px solid ${\n            teamIndex === TeamTypes.TeamOne\n              ? themeData[theme].st_fg\n              : themeData[theme].cl_fg\n          }`;\n        } else {\n          return `1px solid ${color.$dark_dim_border_color}`;\n        }\n    }\n  };\n  return (\n    <StyledRadio\n      theme={themeData[theme]}\n      onClick={onClick}\n      className={classnames(\"option\", teamIndex, {\n        chosen: isChosen,\n      })}\n    >\n      <Radio border={getBorder()} className=\"radio\" size={15} marginRight={8} />\n      <span>{team}</span>\n    </StyledRadio>\n  );\n};\n\ninterface TeamRadiosProperty {\n  roomName: string;\n  userID: string;\n}\n\nconst TeamRadios = (props: TeamRadiosProperty) => {\n  const { roomName, userID } = props;\n  const userTeam = useRecoilValue(userTeamState);\n  const team = [\"草莓糕\", \"可麗露\"] as [\"草莓糕\", \"可麗露\"];\n\n  const handleChooseTeam = (team: Team) => {\n    const playerInfoRef = ref(db, `/${roomName}/playersInfo`);\n\tupdate(child(playerInfoRef, userID), { team })\n  };\n\n  return (\n    <RadioArea className=\"choose_team\">\n      <div className=\"options\">\n        {team.map((team, index) => {\n          const teamIndex = `team${index + 1}` as Team;\n          return (\n            <TeamOption\n              onClick={() => handleChooseTeam(teamIndex)}\n              isChosen={userTeam === teamIndex}\n              key={index}\n              team={team}\n              teamIndex={teamIndex}\n            />\n          );\n        })}\n      </div>\n    </RadioArea>\n  );\n};\n\nexport default TeamRadios;\n","const generateArray = (number: number) => {\n    if(!number) return [];\n    return Array.from(Array(number), (_, x) => x);\n}\n\nexport default generateArray;","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { useRecoilState } from \"recoil\";\nimport Modal from \"components/Global/atoms/Modal\";\nimport Button from 'components/Global/atoms/Button';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\nimport { ThemeData } from 'types/theme';\nimport generateArray from 'util/generateArray';\n\nconst themeData: ThemeData = {\n    light: {\n        bg: 'white',\n        border: 'none',\n        fg: color.$title_font_color,\n        dot: color.$pink_color,\n        button_color: color.$green_color\n    },\n    dark: {\n        bg: color.$dark_dim_bg_color,\n        border: '1px solid' + color.$dark_border_color,\n        fg: color.$dark_default_font_color,\n        dot: color.$fluorescent_pink_color,\n        button_color: color.$dark_border_color\n    },\n}\n\n\nconst LoadingModal = styled.div`\n    width: 50vw;\n    min-height: 50vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 10px;\n    padding: 20px;\n    background-color: ${({ theme }) => theme.bg};\n    border: ${({ theme }) => theme.border};\n\n    .text,\n    .countdown {\n        margin: 0;\n        font-size: 15px;\n        letter-spacing: 1px;\n        color: ${({ theme }) => theme.fg};\n    }\n\n    .text {\n        margin: 12px 0;\n    }\n\n    .lds-default {\n        display: inline-block;\n        position: relative;\n        width: 80px;\n        height: 80px;\n\n        &>div {\n            position: absolute;\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            animation: lds-default 1.3s linear infinite;\n            background: ${({ theme }) => theme.dot};\n\n            &:nth-child(1) {\n                animation-delay: 0s;\n                top: 37px;\n                left: 66px;\n            }\n\n            &:nth-child(2) {\n                animation-delay: -0.1s;\n                top: 22px;\n                left: 62px;\n            }\n\n            &:nth-child(3) {\n                animation-delay: -0.3s;\n                top: 11px;\n                left: 52px;\n            }\n\n            &:nth-child(4) {\n                animation-delay: -0.3s;\n                top: 7px;\n                left: 37px;\n            }\n\n            &:nth-child(5) {\n                animation-delay: -0.4s;\n                top: 11px;\n                left: 22px;\n            }\n\n            &:nth-child(6) {\n                animation-delay: -0.3s;\n                top: 22px;\n                left: 11px;\n            }\n\n            &:nth-child(7) {\n                animation-delay: -0.6s;\n                top: 37px;\n                left: 7px;\n            }\n\n            &:nth-child(8) {\n                animation-delay: -0.7s;\n                top: 52px;\n                left: 11px;\n            }\n\n            &:nth-child(9) {\n                animation-delay: -0.8s;\n                top: 62px;\n                left: 22px;\n            }\n\n            &:nth-child(10) {\n                animation-delay: -0.9s;\n                top: 66px;\n                left: 37px;\n            }\n\n            &:nth-child(11) {\n                animation-delay: -1s;\n                top: 62px;\n                left: 52px;\n            }\n\n            &:nth-child(12) {\n                animation-delay: -1.1s;\n                top: 52px;\n                left: 62px;\n            }\n        }\n    }\n\n    @keyframes lds-default {\n        0%,\n        20%,\n        80%,\n        100% {\n            transform: scale(1);\n        }\n\n        50% {\n            transform: scale(1.5);\n        }\n    }\n`\ninterface LoadingProperty {\n    active: Boolean;\n    type?: string | null;\n    cancelReady?: ()=>void;\n    actionText?: string;\n    countdown?: number;\n    noOpacity?: Boolean;\n    action?: ()=>void;\n    text?: string;\n    className?: string;\n\tisCountdown?:boolean;\n}\n\nconst Loading = (props: LoadingProperty) => {\n    const {\n        active,\n        type = 'ready',\n        text = '等待其他玩家開始',\n        actionText,\n        countdown = 0,\n        noOpacity = false,\n        action = () => {},\n        cancelReady = () => {},\n\t\tisCountdown,\n    } = props;\n\n    const [theme] = useRecoilState(themeState);\n    const [timeLeft, setTimeLeft] = useState(countdown);\n    const dots = generateArray(12);\n\n    useEffect(() => {\n        if(!active) return;\n\n        if (!timeLeft) {\n            action();\n            return;\n        };\n\n        const countdownInterval = setInterval(() => {\n            setTimeLeft(timeLeft - 1);\n        }, 1000);\n\n        return () => clearInterval(countdownInterval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeLeft, active])\n\n    return (\n        <Modal \n            active={active}\n            className={classnames('loading-modal',{\n                'no-opacity': noOpacity,\n            })}\n        >\n            <LoadingModal\n                theme={themeData[theme]}\n                className=\"loading\">\n                <div className=\"lds-default\">\n                    {dots.map((dot)=>(<div key={`dot${dot}`}></div>))}\n                </div>\n                <p className=\"text\">{text}</p>\n                {type && isCountdown &&\n                    <p className=\"countdown\">{timeLeft} 秒後{actionText}</p>\n                }\n                {type === 'ready' &&\n                    <Button\n                        color={themeData[theme].button_color}\n                        onClick={cancelReady}\n                        className=\"cancel_ready\"\n                    >取消</Button>\n                }\n            </LoadingModal>\n        </Modal>\n    )\n};\n\nexport default Loading;","import db, { getFirebaseData } from \"database\";\nimport { child, ref, update } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { userNameState, userRoomState, userIDState } from \"store/user\";\nimport { PlayerData } from \"types/player\";\nimport { ReadyTypes } from \"types/types\";\n\ntype Values = {\n  userReadyStatus: boolean;\n};\n\ntype Handlers = {\n  setReadyStatus: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst useUserReadyStatus = (type: ReadyTypes): [Values, Handlers] => {\n  const [readyStatus, setReadyStatus] = useState(false);\n  const userId = useRecoilValue(userIDState);\n  const userName = useRecoilValue(userNameState);\n  const roomId = useRecoilValue(userRoomState);\n\n  useEffect(() => {\n    const setReady = async (isReady: boolean, type: ReadyTypes) => {\n      const roomRef = ref(db, roomId);\n      const playersInfoRef = child(roomRef, \"playersInfo\");\n      await update(child(playersInfoRef, userId), { ready: isReady });\n\n      if (isReady) {\n        const rawFirebaseData = await getFirebaseData(`${roomId}/playersInfo`);\n        const playersData = Object.values(rawFirebaseData) as PlayerData[];\n        const allReady = playersData.filter((data) => data.ready).length === 4;\n        if (allReady) {\n          await update(roomRef, {\n            gameInfo: {\n              currentPlayer: userName,\n            },\n            [type]: true,\n          });\n        }\n      }\n    };\n    setReady(readyStatus, type);\n  }, [readyStatus, type, roomId, userId, userName]);\n\n  return [{ userReadyStatus: readyStatus }, { setReadyStatus }];\n};\n\nexport default useUserReadyStatus;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport db, { getFirebaseData } from \"database\";\nimport {\n  child,\n  ref,\n  update,\n  onValue,\n  remove,\n  off,\n  onDisconnect,\n} from \"firebase/database\";\nimport { useHistory } from \"react-router-dom\";\nimport { color } from \"style/theme\";\nimport styled from \"styled-components\";\n\nimport { playersData, teamArray } from \"store/players\";\nimport { userIDState, userRoomState, userTeamState } from \"store/user\";\nimport { themeState } from \"store/theme\";\nimport { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\n\nimport { TeamTypes, PlayerData } from \"types/player\";\nimport { ReadyTypes } from \"types/types\";\n\nimport PlayerWindow from \"components/WaitRoom/PlayerWindow\";\nimport SendInviteLinkButton from \"components/WaitRoom/SendInviteLinkButton\";\nimport TeamRadios from \"components/WaitRoom/TeamRadios\";\nimport Button from \"components/Global/atoms/Button\";\nimport Loading from \"components/Global/molecules/Loading\";\nimport useUserReadyStatus from \"util/hook/useUserReadyStatus\";\n\nconst themeData = {\n  light: {\n    bg: color.$theme_background,\n  },\n  dark: {\n    bg: color.$dark_bg_color,\n  },\n};\n\nconst Room = styled.div`\n  padding: 5vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  transition: 0.3s background-color;\n  background-color: ${({ theme }) => theme.bg};\n  position: relative;\n\n  .start_game {\n    letter-spacing: 2px;\n    font-size: 16px;\n  }\n\n  .copy_link_button {\n    margin-left: auto;\n  }\n`;\ninterface ReadyButtonProperty {\n  className: string;\n  buttonMessage: string;\n  onClick: () => void;\n}\nconst ReadyButton = (props: ReadyButtonProperty) => {\n  const { onClick, className, buttonMessage } = props;\n  const [theme] = useRecoilState(themeState);\n\n  const getButtonColor = () => {\n    switch (theme) {\n      case \"light\":\n      default:\n        return buttonMessage === \"開打！\"\n          ? `${color.$pink_color}`\n          : `${color.$unable_color}`;\n      case \"dark\":\n        return buttonMessage === \"開打！\"\n          ? `${color.$fluorescent_pink_color}`\n          : `${color.$dark_dim_border_color}`;\n    }\n  };\n\n  return (\n    <Button className={className} onClick={onClick} color={getButtonColor()}>\n      {buttonMessage}\n    </Button>\n  );\n};\n\nconst WaitRoom = () => {\n  const history = useHistory();\n  const [theme] = useRecoilState(themeState);\n  const [buttonMessage, setButtonMessage] = useState(\"\");\n  const setPlayerData = useSetRecoilState(playersData);\n  const userID = useRecoilValue(userIDState);\n  const userTeam = useRecoilValue(userTeamState);\n  const roomName = useRecoilValue(userRoomState);\n  const team = useRecoilValue(teamArray);\n  const [{ userReadyStatus }, { setReadyStatus }] = useUserReadyStatus(\n    ReadyTypes.EnterGame\n  );\n  const roomRef = ref(db, `/${roomName}`);\n  const playersInfo = child(roomRef, `playersInfo`);\n  const isAllReady = child(roomRef, ReadyTypes.EnterGame);\n\n  const handleUserData = async () => {\n    const rawPlayersList = await getFirebaseData(`${roomName}/playersInfo`);\n    const playersData = Object.values(rawPlayersList) as PlayerData[];\n    const sortedByTimestamp = playersData.sort(\n      (a, b) => a.timestamp - b.timestamp\n    );\n    const userOrder = sortedByTimestamp.findIndex((data) => data.id === userID);\n    const userDefaultTeam =\n      userOrder === 0 || userOrder === 3\n        ? TeamTypes.TeamOne\n        : TeamTypes.TeamTwo;\n\n    update(child(playersInfo, userID), {\n      team: userTeam || userDefaultTeam,\n      ready: false,\n    });\n  };\n\n  useEffect(() => {\n    const prepareWaitRoom = async () => {\n      await initWaitRoomData();\n      detectUserDisConnect();\n\n      handleUserData();\n\n      onValue(playersInfo, async (data) => {\n        if (!data.val()) return;\n        const playersData = Object.values(data.val()) as PlayerData[];\n        const sortedByTimestamp = playersData.sort(\n          (a, b) => a.timestamp - b.timestamp\n        );\n        setPlayerData(sortedByTimestamp);\n      });\n\n      onValue(isAllReady, async (data) => {\n        if (data.val()) {\n          await enterGame();\n          remove(isAllReady);\n        }\n      });\n    };\n\n    prepareWaitRoom();\n\n    return () => {\n      setReadyStatus(false);\n      off(playersInfo);\n      onDisconnect(child(playersInfo, userID)).cancel();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (team.length < 4) {\n      return setButtonMessage(\"人數不足⋯⋯\");\n    }\n    const teamOneAmount = team.filter((team) => team === TeamTypes.TeamOne)\n      .length;\n    const teamTwoAmount = team.filter((team) => team === TeamTypes.TeamTwo)\n      .length;\n    if (teamOneAmount !== teamTwoAmount) {\n      return setButtonMessage(\"欸欸橋牌是二打二捏！\");\n    }\n    return setButtonMessage(\"開打！\");\n  }, [team]);\n\n  const detectUserDisConnect = () => {\n    onDisconnect(child(playersInfo, userID)).remove();\n  };\n\n  const initWaitRoomData = async () => {\n    await update(child(playersInfo, userID), { ready: false });\n  };\n\n  const enterGame = async () => {\n    await initWaitRoomData();\n    history.push(`/g/${roomName}/${userID}`);\n  };\n\n  return (\n    <Room theme={themeData[theme]}>\n      <SendInviteLinkButton className=\"copy_link_button\" />\n      <PlayerWindow />\n      <TeamRadios roomName={roomName} userID={userID} />\n      <ReadyButton\n        className=\"start_game\"\n        buttonMessage={buttonMessage}\n        onClick={() => {\n          if (buttonMessage !== \"開打！\") return;\n          setReadyStatus(true);\n        }}\n      />\n      <Loading\n        active={userReadyStatus}\n        cancelReady={() => setReadyStatus(false)}\n      />\n    </Room>\n  );\n};\n\nexport default WaitRoom;\n","import { CardSuitType, Card} from 'types/card';\nconst buildNewDeck = () => {\n    const suit = [CardSuitType.Spade, CardSuitType.Heart, CardSuitType.Diamond, CardSuitType.Club];\n    const number = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    const deck: Card[] = [];\n    for (let i = 0; i < suit.length; i++) {\n        let card: Card;\n        for (let j = 0; j < number.length; j++) {\n            card = {\n                suit: suit[i],\n                number: number[j],\n            };\n            deck.push(card);\n        }\n    }\n    return deck;\n};\n\nconst shuffle = (deck: Card[]) => {\n    let i = deck.length;\n    while (i > 1) {\n        let index = Math.floor(Math.random() * i--);\n        [deck[i], deck[index]] = [deck[index], deck[i]];\n    }\n    return deck;\n};\n\nconst sortCards = (cards: Card[]) => {\n    const sorted = cards.sort((a: Card, b: Card) => {\n        const order = [CardSuitType.Spade, CardSuitType.Heart, CardSuitType.Club, CardSuitType.Diamond];\n        const cardAPoint = 100 * (4 - order.indexOf(a.suit)) + 13 - a.number;\n        const cardBPoint = 100 * (4 - order.indexOf(b.suit)) + 13 - b.number;\n        return cardBPoint - cardAPoint;\n    });\n    return sorted;\n};\n\nconst dealCards = (playerAmount: number, deck: Card[]) => {\n    const players: Array<Card[]> = [];\n    for (let i = 0; i < playerAmount; i++) {\n        const eachPlayer: [] = [];\n        players.push(eachPlayer);\n    }\n\n    for (let i = 0; i < deck.length; i++) {\n        const playerIndex = i % playerAmount;\n        players[playerIndex].push(deck[i]);\n    }\n    const sorted = players.map((cards) => sortCards(cards));\n    return sorted;\n};\n\nconst shuffledDeck = () => shuffle(buildNewDeck());\n\nexport const generateNewDeck = () => {\n    return dealCards(4, shuffledDeck());\n};\n","import { CardSuitType, SuitColorType } from 'types/card';\nexport const suitColor = (suit: CardSuitType | undefined | null) => {\n    switch (suit) {\n        case CardSuitType.Spade:\n        case CardSuitType.Club:\n        default:\n            return SuitColorType.Black;\n        case CardSuitType.Heart:\n        case CardSuitType.Diamond:\n            return SuitColorType.Red;\n    }\n}\n\nexport const suitInPoker = (suit: CardSuitType | undefined) => {\n    switch (suit) {\n        case CardSuitType.Spade:\n            return \"♠\";\n        case CardSuitType.Heart:\n            return \"♥\";\n        case CardSuitType.Diamond:\n            return \"♦\";\n        case CardSuitType.Club:\n        default:\n            return \"♣\";\n    }\n}","import React from 'react';\nimport { CardSuitType } from 'types/card';\n\nconst getSuitHtmlCode = (suit: CardSuitType | null | undefined) => {\n    switch (suit) {\n        case null:\n            return (<></>)\n        case CardSuitType.Spade:\n            return (<>&#9824;&#xFE0E;</>)\n        case CardSuitType.Heart:\n            return (<>&#9829;&#xFE0E;</>)\n        case CardSuitType.Diamond:\n            return (<>&#9830;&#xFE0E;</>)\n        case CardSuitType.Club:\n        default:\n            return (<>&#9827;&#xFE0E;</>);\n    }\n}\n\ninterface SuitProperty {\n    suit: CardSuitType | null | undefined;\n    className?: string;\n}\n\nconst Suit = (props: SuitProperty) => {\n    const { suit, className } = props;\n    const suitCode = getSuitHtmlCode(suit);\n    return (\n        <span className={className}>\n            {suitCode}\n        </span>\n    )\n};\n\nexport default Suit;","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/theme';\n\nconst Icon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #fff;\n    border-radius: 3px;\n    padding: 8px;\n    filter: drop-shadow(0px 0px 2px rgb(170, 170, 170));\n    z-index: 1;\n    &::after {\n        content: \"\";\n        position: absolute;\n        display: block;\n        background-color: #fff;\n        width: 6px;\n        height: 6px;\n        transform-origin: top right;\n        transform: rotate(45deg);\n        top: 100%;\n    }\n    &.on_table {\n        position: absolute;\n        transform: translate(-50%, -150%);\n        left: 50%;\n        top: 0;\n    }\n    &.on_bind_list {\n        position: absolute;\n        transform: translate(-50%);\n        left: 50%;\n        bottom: 99%;\n        z-index: 500;\n    }\n\n    .dots {\n        display: flex;\n\n        .dot {\n            height: 4px;\n            width: 4px;\n            border-radius: 50%;\n            background-color: ${color.$black_suit_color};\n\n            animation: animateDot 2s cubic-bezier(0.69, 0.76, 0.58, 1);\n            animation-iteration-count: infinite;\n\n            &:nth-child(1) {\n                animation-delay: 0s;\n            }\n\n            &:nth-child(2) {\n                margin: 0 4px;\n                animation-delay: 0.3s;\n            }\n\n            &:nth-child(3) {\n                animation-delay: 0.3s;\n            }\n        }\n    }\n\n    @keyframes animateDot {\n        0% {\n            transform: translate3d(0);\n        }\n\n        25% {\n            transform: translate3d(0, -1.5px, 0);\n        }\n\n        50% {\n            transform: translate3d(0, 0.5px, 0);\n        }\n\n        65%,\n        100% {\n            transform: translate3d(0, 0, 0);\n        }\n    }\n`\ninterface ThinkingIconProperty {\n    className: string;\n}\n\nconst ThinkingIcon = (props: ThinkingIconProperty) => {\n    const { className } = props;\n    return (\n        <Icon className={`thinking ${className}`}>\n            <div className=\"dots\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n            </div>\n        </Icon>\n    )\n};\n\nexport default ThinkingIcon","import React, { useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport db from \"database\";\nimport { ref, onValue, off } from \"firebase/database\";\nimport styled from \"styled-components\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { themeState } from \"store/theme\";\nimport { color } from \"style/theme\";\nimport { suitColor } from \"util/suit\";\nimport { OrderedStartFromTeamOne } from \"store/players\";\nimport { currentPlayerName } from \"store/game\";\nimport { playersCalledListState } from \"store/bind\";\nimport { userRoomState } from \"store/user\";\nimport Suit from \"components/Global/atoms/Suit\";\nimport ThinkingIcon from \"components/GameRoom/ThinkingIcon\";\nimport { TeamTypes } from \"types/player\";\nimport { CalledBind } from \"types/bind\";\nimport { ThemeTypes } from \"types/theme\";\nimport { CardSuitType } from \"types/card\";\n\nconst themeData = {\n  light: {\n    t1_name_fg: \"white\",\n    t2_name_fg: \"white\",\n    t1_name_bg: color.$pink_color,\n    t2_name_bg: color.$brown_color,\n    binds_bg: \"white\",\n    border: \"none\",\n    red_suit_color: color.$red_suit_color,\n    black_suit_color: color.$black_suit_color,\n    pass_color: color.$pass_color,\n  },\n  dark: {\n    t1_name_fg: color.$fluorescent_pink_color,\n    t2_name_fg: color.$fluorescent_yellow_color,\n    t1_name_bg: color.$dark_dim_bg_color,\n    t2_name_bg: color.$dark_dim_bg_color,\n    binds_bg: color.$dark_dim_bg_color,\n    border: \"1px solid\" + color.$dark_dim_border_color,\n    red_suit_color: color.$dark_red_suit_color,\n    black_suit_color: \"white\",\n    pass_color: color.$fluorescent_green_color,\n  },\n};\n\ninterface getUserTurnEffectProperty {\n  team: TeamTypes;\n  theme: ThemeTypes;\n}\n\nconst getUserTurnEffect = (props: getUserTurnEffectProperty) => {\n  const { theme, team } = props;\n  switch (theme) {\n    case \"light\":\n    default:\n      return `box-shadow: 0px 0px 0px 2px ${color.$highlight_color};`;\n    case \"dark\":\n      const teamColor =\n        team === TeamTypes.TeamOne\n          ? color.$fluorescent_pink_color\n          : color.$fluorescent_yellow_color;\n      return `\n            border: none;\n            box-shadow: 0 0 2px 1px ${teamColor};\n            `;\n  }\n};\n\ninterface PlayIProperty {\n  team: TeamTypes;\n}\n\nconst Player = styled.div<PlayIProperty>`\n  position: relative;\n  flex: 0 1 25%;\n  font-size: 13px;\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.binds_bg};\n  border: ${({ theme }) => theme.border};\n\n  &.is_player_turn {\n    ${({ theme, team }) => getUserTurnEffect({ theme, team })};\n  }\n\n  & + div {\n    margin-left: 6px;\n  }\n\n  .name {\n    position: relative;\n    border-radius: 4px 4px 0 0;\n    max-width: calc(85vw / 4 - 38px / 4);\n    text-align: center;\n    line-height: 20px;\n    padding: 6px;\n    box-sizing: border-box;\n    letter-spacing: 1px;\n    transition: 0.3s all;\n    border-bottom: ${({ theme }) => theme.border};\n\n    & > p {\n      overflow: hidden;\n      white-space: nowrap;\n    }\n  }\n\n  &:nth-child(2n + 1) {\n    .name {\n      background-color: ${({ theme }) => theme.t1_name_bg};\n      color: ${({ theme }) => theme.t1_name_fg};\n    }\n  }\n\n  &:nth-child(2n + 2) {\n    .name {\n      background-color: ${({ theme }) => theme.t2_name_bg};\n      color: ${({ theme }) => theme.t2_name_fg};\n    }\n  }\n\n  .called_bind {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 5px;\n    box-sizing: border-box;\n    min-height: 8vh;\n    .bind {\n      & + .bind {\n        margin-top: 3px;\n      }\n      &.red {\n        color: ${({ theme }) => theme.red_suit_color};\n      }\n      &.black {\n        color: ${({ theme }) => theme.black_suit_color};\n      }\n      &.pass {\n        letter-spacing: 1px;\n        color: ${({ theme }) => theme.pass_color};\n      }\n    }\n  }\n`;\n\ninterface PlayInfoProperty {\n  name: string;\n  team: TeamTypes;\n  calledList: CalledBind[];\n}\nconst PlayInfo = (props: PlayInfoProperty) => {\n  const { name, team, calledList } = props;\n  const [theme] = useRecoilState(themeState);\n  const nowPlayer = useRecoilValue(currentPlayerName);\n  const isPlayerTurn = nowPlayer === name;\n\n  return (\n    <Player\n      theme={themeData[theme]}\n      team={team}\n      className={classnames(\"player\", { is_player_turn: isPlayerTurn })}\n    >\n      {isPlayerTurn && <ThinkingIcon className=\"on_bind_list\" />}\n      <div className=\"name\">\n        <p>{name}</p>\n      </div>\n      <div className=\"called_bind\">\n        {calledList.map((called, index) => {\n          const isPassed = called === \"pass\";\n          const bind =\n            called === \"pass\" ? { number: 0, suit: CardSuitType.Club } : called;\n          if (isPassed) {\n            return (\n              <span key={\"pass\" + index} className={classnames(\"bind\", \"pass\")}>\n                PASS\n              </span>\n            );\n          }\n          return (\n            <span\n              key={\"called\" + index}\n              className={classnames(\"bind\", suitColor(bind.suit))}\n            >\n              <span>{bind.number}</span>\n              <Suit suit={bind.suit} />\n            </span>\n          );\n        })}\n      </div>\n    </Player>\n  );\n};\n\ninterface PlayerListProperty {\n  className: string;\n}\nconst PlayerList = (props: PlayerListProperty) => {\n  const { className } = props;\n  const playerList = useRecoilValue(OrderedStartFromTeamOne);\n  const roomId = useRecoilValue(userRoomState);\n  const [calledList, setCalledList] = useRecoilState(playersCalledListState);\n\n  useEffect(() => {\n    const calledBindsRef = ref(db, `${roomId}/gameInfo/calledBinds`);\n    onValue(calledBindsRef, (data) => {\n      const allCalledBinds = data.val();\n      setCalledList(allCalledBinds || {});\n    });\n    return () => {\n      off(calledBindsRef);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={className}>\n      {playerList.map((player, index) => {\n        const team = (\"team\" + (index % 2) + 1) as TeamTypes;\n        return (\n          <PlayInfo\n            key={player + index}\n            name={player}\n            team={team}\n            calledList={calledList[player] || []}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PlayerList;\n","type Object = { [key: string]: any };\n\nconst isObjectEquivalent = (a: Object | null, b: Object | null) => {\n    if(!a || !b) return false;\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n\n    return aKeys.every(key => {\n        return a[key] === b[key]\n    })\n}\n\nexport default isObjectEquivalent","import React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport Suit from 'components/Global/atoms/Suit';\nimport { themeState } from 'store/theme';\nimport { ThemeTypes } from 'types/theme';\nimport { color } from 'style/theme';\nimport { suitColor } from 'util/suit';\nimport Radio from 'components/Global/atoms/Radio';\nimport { CardSuitType } from 'types/card';\n\nconst themeData = {\n    light: {\n        red_suit_color: color.$red_suit_color,\n        black_suit_color: color.$black_suit_color,\n        unable_color: color.$unable_color,\n    },\n    dark: {\n        red_suit_color: color.$dark_red_suit_color,\n        black_suit_color: 'white',\n        unable_color: color.$dark_unable_color\n    },\n}\n\nconst Button = styled.div`\n    display: flex;\n    align-items: center;\n\n    .pattern {\n        font-size: 16px;\n        line-height: 16px;\n\n        &.red {\n            color: ${({ theme }) => theme.red_suit_color};\n        }\n\n        &.black {\n            color: ${({ theme }) => theme.black_suit_color};\n        }\n    }\n\n    &.is_unable {\n        .pattern {\n            color: ${({ theme }) => theme.unable_color};\n        }\n    }\n\n    &.chosen {\n        .radio {\n            &::after {\n                background-color: #dcdcdc;\n            }\n        }\n    }\n`\n\ninterface OptionButtonProperty {\n    isUnableBind: boolean;\n    trickNumber: number;\n    suit: CardSuitType;\n    onClick: () => void;\n    isPicked: boolean;\n}\n\nconst OptionButton = (props: OptionButtonProperty) => {\n    const {\n        isUnableBind,\n        trickNumber,\n        suit,\n        onClick = () => { },\n        isPicked\n    } = props;\n    const [theme] = useRecoilState(themeState);\n    const getBorder = () => {\n        switch (theme) {\n            case ThemeTypes.Light:\n            default:\n                return `1px solid ${color.$under_line_color}`;\n            case ThemeTypes.Dark:\n                return `1px solid ${color.$dark_dim_border_color}`;\n        }\n    }\n    return (\n        <Button\n            theme={themeData[theme]}\n            key={trickNumber + suit}\n            className={classnames(\"option\", { \"chosen\": isPicked, \"is_unable\": isUnableBind })}\n            onClick={onClick}>\n            <Radio\n                className=\"radio\"\n                border={getBorder()}\n                size={12}\n                marginRight={5}\n            />\n            <Suit \n                className={classnames(\"pattern\", suitColor(suit))}\n                suit={suit}\n            />\n        </Button>\n    )\n}\n\nexport default OptionButton;","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { color } from 'style/theme';\nimport { ThemeTypes } from 'types/theme';\nimport { userPickBindState, nowBindState  } from 'store/bind';\nimport isObjectEquivalent from 'util/isObjectEquivalent';\nimport OptionButton from './OptionButton';\nimport { Card, CardSuitType } from 'types/card';\n\nconst themeData = {\n    light: { \n        number_c: color.$default_font_color,\n        border: color.$under_line_color\n    },\n    dark: {\n        number_c: 'white',\n        border: color.$dark_dim_border_color\n    },\n}\n\nconst OptionRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n\n    &:not(:last-child) {\n        transition: 0.3s all;\n        border-bottom: 1px solid ${({theme}) => theme.border };\n    }\n\n    .number {\n        flex: 0 1 25%;\n        margin-right: 15px;\n        transition: 0.3s all;\n        color: ${({theme}) => theme.number_c };\n    }\n    .suits {\n        display: flex;\n        justify-content: space-between;\n        flex: 1 0 auto;\n    }\n`\n\ninterface OptionsProperty  {\n    trickNumber: number;\n    isUserTurn: boolean;\n    theme: ThemeTypes;\n}\n\nconst Options = (props: OptionsProperty) => {\n    const { trickNumber, isUserTurn, theme } = props;\n    const suits = [CardSuitType.Club, CardSuitType.Diamond, CardSuitType.Heart, CardSuitType.Spade];\n    const [pickBindState,setPickBindState] = useRecoilState(userPickBindState);\n    const nowBind = useRecoilValue(nowBindState);\n\n    const isUnableBind = (card: Card) => {\n        const {suit, number} = card;\n        if(nowBind.number > number) return true;\n        if(nowBind.number === number) {\n            return !(suits.indexOf(suit) > suits.indexOf(nowBind.suit))\n        }\n        return false;\n    }\n\n    const handlePickBind = (bindData: Card) => {\n        if(!isUserTurn) return;\n        if(isUnableBind(bindData)) return;\n        if(isObjectEquivalent(bindData, pickBindState as Card)){\n            setPickBindState(null);\n        } else {\n            setPickBindState(bindData);\n        }\n    }\n\n    return (\n        <OptionRow \n            theme={themeData[theme]}\n            className=\"option_row\">\n            <span className=\"number\">{trickNumber}</span>\n            <div className=\"suits\">\n                {suits.map((suit)=>{\n                    const called = {suit, number: trickNumber} as Card;\n                    return(\n                    <OptionButton \n                        key={trickNumber+suit}\n                        onClick={()=>handlePickBind(called)}\n                        trickNumber={trickNumber}\n                        isUnableBind={isUnableBind(called)}\n                        isPicked={isObjectEquivalent(called,pickBindState as Card)}\n                        suit={suit}\n                    />\n                )})}\n            </div>\n        </OptionRow>\n    )\n}\n\nconst List = styled.div`\n    max-height: 25vh;\n    padding: 0 10px;\n    overflow-y: scroll;\n`\n\ninterface OptionListProperty  {\n    tricks: number[];\n    isUserTurn: boolean;\n    theme: ThemeTypes;\n}\n\nconst OptionList = (props: OptionListProperty) => {\n    const { tricks = [], isUserTurn, theme }  = props;\n    \n    return (\n    <List \n        theme={themeData[theme]}\n        className=\"bind_options\">\n        {tricks.map(trickNumber => (\n            <Options         \n                theme={theme}\n                key={'trick'+trickNumber}\n                trickNumber={trickNumber}\n                isUserTurn={isUserTurn}\n            />\n        ))}\n    </List>\n)};\n\nexport default OptionList;","import React, { useEffect, useMemo } from \"react\";\nimport db from \"database\";\nimport { child, ref, onValue, off, get, update } from \"firebase/database\";\nimport classnames from \"classnames\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport Suit from \"components/Global/atoms/Suit\";\nimport { color } from \"style/theme\";\nimport { ThemeTypes } from \"types/theme\";\nimport { CalledBind } from \"types/bind\";\nimport {\n  userPickBindState,\n  nowBindState,\n  availibleTricksState,\n} from \"store/bind\";\nimport { isUserTurnState, trumpState } from \"store/game\";\nimport { relationWithUser, OrderedStartFromTeamOne } from \"store/players\";\nimport { playersCalledListState } from \"store/bind\";\nimport { userNameState, userRoomState } from \"store/user\";\nimport OptionList from \"./OptionList\";\n\ninterface BoxProperty {\n  themeType: ThemeTypes;\n}\n\nconst Box = styled.div<BoxProperty>`\n  border-radius: 4px;\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  transition: 0.3s all;\n  background-color: ${({ theme }) => theme.bg};\n  border-width: ${({ themeType }) =>\n    themeType === ThemeTypes.Light ? 0 : \"1px\"};\n  border-style: solid;\n  border-color: ${({ theme }) => theme.border};\n\n  & > p {\n    padding: 8px 0;\n    font-size: 16px;\n    text-align: center;\n    letter-spacing: 1px;\n    margin-bottom: 5px;\n    transition: 0.3s all;\n    border-bottom: 1px solid ${({ theme }) => theme.border};\n    background-color: ${({ theme }) => theme.status_unable_bg};\n    color: ${({ theme }) => theme.status_unable_fg};\n  }\n\n  & > button {\n    padding: 8px 0;\n    margin-top: 5px;\n    font-size: 16px;\n    line-height: 16px;\n    letter-spacing: 2px;\n    transition: 0.3s all;\n    border-top: 1px solid ${({ theme }) => theme.border};\n    background-color: ${({ theme }) => theme.call_unable_bg};\n    color: ${({ theme }) => theme.call_unable_fg};\n  }\n\n  &.is_user_turn {\n    & > p {\n      background-color: ${({ theme }) => theme.status_active_bg};\n      color: ${({ theme }) => theme.status_active_fg};\n    }\n    & > button {\n      background-color: ${({ theme }) => theme.call_pass_bg};\n      color: ${({ theme }) => theme.call_pass_fg};\n\n      &.has_pick_bind {\n        background-color: ${({ theme }) => theme.call_active_bg};\n        color: ${({ theme }) => theme.call_active_fg};\n      }\n    }\n  }\n`;\n\nconst Hint = styled.p`\n  text-align: center;\n  margin-top: 4px;\n  letter-spacing: 1px;\n  font-size: 12px;\n  transition: 0.3s all;\n  color: ${({ theme }) => theme.hint};\n`;\n\nconst themeData = {\n  light: {\n    bg: \"white\",\n    status_unable_bg: color.$unable_color,\n    status_active_bg: color.$highlight_color,\n    status_unable_fg: color.$unable_font_color,\n    status_active_fg: color.$title_font_color,\n    call_unable_bg: color.$unable_color,\n    call_unable_fg: color.$unable_font_color,\n    call_pass_bg: color.$pass_color,\n    call_pass_fg: \"white\",\n    call_active_bg: color.$pink_color,\n    call_active_fg: \"white\",\n    border: \"transparent\",\n    hint: color.$default_font_color,\n  },\n  dark: {\n    bg: color.$dark_dim_bg_color,\n    status_unable_bg: color.$dark_dim_bg_color,\n    status_unable_fg: color.$unable_font_color,\n    status_active_bg: color.$dark_dim_bg_color,\n    status_active_fg: color.$fluorescent_yellow_color,\n    call_unable_bg: color.$dark_dim_bg_color,\n    call_unable_fg: \"#7B7B7B\",\n    call_pass_bg: color.$dark_dim_bg_color,\n    call_pass_fg: color.$fluorescent_green_color,\n    call_active_bg: color.$dark_dim_bg_color,\n    call_active_fg: color.$fluorescent_pink_color,\n    border: color.$dark_dim_border_color,\n    hint: \"white\",\n  },\n};\n\ninterface BindListProperty {\n  theme: ThemeTypes;\n}\n\nconst BindList = (props: BindListProperty) => {\n  const { theme } = props;\n  const [userPickBind, setUserPickBind] = useRecoilState(userPickBindState);\n  const [nowBind, setNowBind] = useRecoilState(nowBindState);\n  const playerList = useRecoilValue(OrderedStartFromTeamOne);\n  const setTrump = useSetRecoilState(trumpState);\n  const { nextPlayer, teammate, previousPlayer } = useRecoilValue(\n    relationWithUser\n  );\n  const calledList = useRecoilValue(playersCalledListState);\n  const availibleTricks = useRecoilValue(availibleTricksState);\n  const isUserTurn = useRecoilValue(isUserTurnState);\n  const roomId = useRecoilValue(userRoomState);\n  const userName = useRecoilValue(userNameState);\n\n  const roomRef = ref(db, roomId);\n  const gameInfoRef = child(roomRef, \"gameInfo\");\n\n  useEffect(() => {\n    detectTrumpDecided();\n    const nowBindRef = child(gameInfoRef, \"nowBind\");\n\n    onValue(nowBindRef, (data) => {\n      const nowBindData = data.val();\n      if (nowBindData) {\n        setNowBind(nowBindData);\n      }\n    });\n\n    return () => {\n      off(nowBindRef);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const buttonMessage = useMemo(() => {\n    const noBind = nowBind.number === 0;\n    if (isUserTurn) {\n      if (noBind && !userPickBind) return \"不能PASS!\";\n      if (userPickBind) {\n        return (\n          <>\n            {`喊${userPickBind.number}`}\n            <Suit suit={userPickBind.suit} />\n          </>\n        );\n      } else {\n        return \"PASS\";\n      }\n    } else {\n      return \"PASS\";\n    }\n  }, [isUserTurn, userPickBind, nowBind]);\n\n  const callBind = async () => {\n    const userBindListRef = child(gameInfoRef, `calledBinds/${userName}`);\n\n    const prevUserBinds = await get(userBindListRef)\n      .then((data) => {\n        if (data.exists()) {\n          return data.val();\n        } else {\n          return [];\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    const nextPlayer = getNext();\n\n    let toUpdate = {\n      [`calledBinds/${userName}`]: [...prevUserBinds, userPickBind || \"pass\"],\n      currentPlayer: nextPlayer,\n    } as any;\n\n    if (userPickBind) {\n      toUpdate = {\n        ...toUpdate,\n        nowBind: { ...userPickBind, player: userName },\n      };\n    }\n\n    await update(gameInfoRef, toUpdate);\n    setUserPickBind(null);\n  };\n\n  const getNext = () => {\n    const passedPlayers = Object.entries(calledList)\n      .filter((v) => v[1].includes(\"pass\"))\n      .map((v) => v[0]);\n\n    const playersOrder = [nextPlayer, teammate, previousPlayer];\n    const next = playersOrder.filter((player) => {\n      return !passedPlayers.includes(player);\n    })[0];\n\n    return next;\n  };\n\n  const detectTrumpDecided = () => {\n    const bindListRef = child(gameInfoRef, \"calledBinds\");\n\n    onValue(bindListRef, async (data) => {\n      const binds = data.val();\n      if (!binds) return;\n      const playersCalledList = Object.values(binds) as CalledBind[][];\n      const passAmount = playersCalledList.filter((playerCalledList) => {\n        return playerCalledList.some((bind) => bind === \"pass\");\n      }).length;\n      if (passAmount === 3) {\n        const nowBindRef = child(gameInfoRef, \"nowBind\");\n        const { suit, number, player } = await get(nowBindRef)\n          .then((data) => {\n            if (data.exists()) {\n              return data.val();\n            } else {\n              return [];\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        setTrump({ suit, number });\n\n        update(gameInfoRef, {\n          currentPlayer: getNextPlayer(player),\n          calledBinds: null,\n          nowBind: null,\n        });\n\n        off(bindListRef);\n      }\n    });\n  };\n\n  const getNextPlayer = (playerName: string) => {\n    const playerIndex = playerList.indexOf(playerName);\n    const nextPlayerIndex =\n      playerIndex + 1 > 3 ? playerIndex - 3 : playerIndex + 1;\n    return playerList[nextPlayerIndex];\n  };\n\n  return (\n    <>\n      <Box\n        theme={themeData[theme]}\n        themeType={theme}\n        className={classnames(\"bind_list\", { is_user_turn: isUserTurn })}\n      >\n        <p>{isUserTurn ? \"\" : \"NOT \"}YOUR TURN</p>\n        <OptionList\n          theme={theme}\n          isUserTurn={isUserTurn}\n          tricks={availibleTricks}\n        />\n        <button\n          onClick={callBind}\n          className={classnames({ has_pick_bind: userPickBind })}\n          disabled={!isUserTurn || buttonMessage === \"不能PASS!\"}\n        >\n          {buttonMessage}\n        </button>\n      </Box>\n      {userPickBind && (\n        <Hint theme={themeData[theme]}>再次點擊相同選項可以取消選擇</Hint>\n      )}\n    </>\n  );\n};\n\nexport default BindList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/theme';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\n\nimport Modal from 'components/Global/atoms/Modal';\nimport PlayerList from './PlayerList'\nimport BindList from './BindList'\n\n\nconst Box = styled.div`\n    width: 85vw;\n    align-self: flex-start;\n    margin-top: 5vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: stretch;\n    border-radius: 6px;\n    overflow: hidden;\n    transition: 0.3s all;\n    border: ${({theme}) => theme.border };\n\n    .title {\n        margin: 0;\n        padding: 10px 0;\n        text-align: center;\n        font-size: 18px;\n        letter-spacing: 2px;\n        color: white;\n        transition: 0.3s all;\n        border-bottom: ${({theme}) => theme.border };\n        background-color: ${({theme}) => theme.title_bg };\n    }\n\n    .content {\n        padding: 10px;\n        transition: 0.3s all;\n        background-color: ${({theme}) => theme.content_bg };\n\n        .player_list {\n            display: flex;\n        }\n    }\n`\n\nconst themeData = {\n    light: { \n        title_bg: color.$green_color, \n        content_bg: color.$theme_background,\n        border: `1px solid transparent`,\n    },\n    dark: { \n        title_bg: color.$dark_bg_color, \n        content_bg: color.$dark_dim_bg_color,\n        border: `1px solid ${color.$dark_dim_border_color}`,\n    },\n}\n\nconst BindingBox = () => {\n    const [theme] = useRecoilState(themeState);\n    return (\n        <Box\n            theme={themeData[theme]}\n            className=\"box\">\n            <p className=\"title\">BINDING</p>\n            <div className=\"content\">\n                <PlayerList className=\"player_list\" />\n                <BindList theme={theme} />\n            </div>\n        </Box>\n    )\n}\n\ninterface ModalBindingProperty {\n    active: boolean\n}\n\nconst ModalBinding = (props: ModalBindingProperty) => {\n    const { active } = props;\n    return (\n        <Modal\n            active={active}\n            className=\"binding_modal\">\n            <BindingBox />\n        </Modal>\n    )\n}\n\nexport default ModalBinding;","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\nimport Modal from 'components/Global/atoms/Modal';\n\nconst themeData = {\n    light: {\n        bg: 'white',\n        border: 'none',\n        fg: color.$default_font_color,\n        yes_button_fg: 'white',\n        yes_button_bg: color.$pink_color,\n        no_button_fg: 'white',\n        no_button_bg: color.$green_color,\n    },\n    dark: {\n        bg: color.$dark_dim_bg_color,\n        border: `1px solid ${color.$dark_dim_border_color}`,\n        fg: color.$dark_default_font_color,\n        yes_button_fg: color.$fluorescent_pink_color,\n        yes_button_bg: 'transparent',\n        no_button_fg: color.$fluorescent_green_color,\n        no_button_bg: 'transparent',\n    },\n}\n\nconst AskBox = styled.div`\n    display:  flex;\n    flex-direction: column;\n    justify-content: center;\n    border-radius: 5px;\n    overflow: hidden;\n    transition: .3s all;\n    background-color: ${({ theme }) => theme.bg};\n    border: ${({ theme }) => theme.border};\n\n    .content {\n        display:  flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 25px 15px 15px;\n\n        img {\n        width: 80px;\n        margin-bottom: 20px;\n        }\n\n        p {\n            letter-spacing: 1px;\n            transition: .3s all;\n            color: ${({ theme }) => theme.fg};\n        }\n    }\n\n    .button_area {\n        display: flex;\n        & > button {\n            padding: 8px 0;\n            font-size: 15px;\n            letter-spacing: 2px;\n            flex: 1 1 50%;\n            transition: .3s all;\n\n            &:first-child {\n                background-color: ${({ theme }) => theme.yes_button_bg};\n                color: ${({ theme }) => theme.yes_button_fg};\n                border-top: ${({ theme }) => theme.border};\n                border-right: ${({ theme }) => theme.border};\n            }\n\n            &:last-child {\n                background-color: ${({ theme }) => theme.no_button_bg};\n                color: ${({ theme }) => theme.no_button_fg};\n                border-top: ${({ theme }) => theme.border};\n            }\n        }\n    }\n`\n\ninterface ContentProperty {\n    imageUrl: string;\n    description: string;\n    onConfirmText: string;\n    onCancelText: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n}\n\n\nconst Content = (props: ContentProperty) => {\n    const { imageUrl, description, onConfirm, onCancel, onConfirmText, onCancelText } = props;\n    const [theme] = useRecoilState(themeState);\n\n    return (\n        <AskBox theme={themeData[theme]} >\n            <div className=\"content\">\n                <img alt=\"icon\" className=\"icon\" src={imageUrl}></img>\n                <p>{description}</p>\n            </div >\n            <div className=\"button_area\">\n                <button onClick={onConfirm}>{onConfirmText}</button>\n                <button onClick={onCancel}>{onCancelText}</button>\n            </div>\n        </AskBox >\n    )\n}\n\ninterface ModalConfirmProperty extends ContentProperty  {\n    className: string;\n    active: boolean;\n}\n\nconst ModalConfirm = (props: ModalConfirmProperty) => {\n    const { \n        active,\n        className,\n        imageUrl,\n        description,\n        onConfirm,\n        onCancel,\n        onConfirmText = \"確定\",\n        onCancelText = \"取消\"\n    } = props;\n    return (\n        <Modal\n            active={active}\n            className={className}>\n            <Content\n                imageUrl={imageUrl}\n                description={description}\n                onConfirmText={onConfirmText}\n                onCancelText={onCancelText}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        </Modal >\n    );\n}\n\nexport default ModalConfirm","export default __webpack_public_path__ + \"static/media/kanaheiclap.23b0e19f.gif\";","import React from \"react\";\nimport db from \"database\";\nimport { child, ref, set } from \"firebase/database\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { userRoomState } from \"store/user\";\nimport { responseToBadDeck } from \"store/deck\";\nimport ModalConfirm from \"components/Global/molecules/ModalConfirm\";\nimport Kanahei from \"assets/kanaheiclap.gif\";\nimport { GameStatusTypes } from \"types/types\";\n\ninterface ModalGiveUpProperty {\n  active: boolean;\n}\n\nconst ModalGiveUp = (props: ModalGiveUpProperty) => {\n  const { active } = props;\n  const roomId = useRecoilValue(userRoomState);\n  const setResponseToBadDeck = useSetRecoilState(responseToBadDeck);\n\n  const restartGame = () => {\n    const roomRef = ref(db, roomId);\n    set(child(roomRef, \"event\"), GameStatusTypes.Restart);\n  };\n\n  return (\n    <ModalConfirm\n      active={active}\n      className=\"give_up_modal\"\n      description=\"好像可以倒牌捏\"\n      imageUrl={Kanahei}\n      onConfirmText=\"倒爆\"\n      onCancelText=\"不倒\"\n      onConfirm={restartGame}\n      onCancel={() => setResponseToBadDeck(true)}\n    />\n  );\n};\n\nexport default ModalGiveUp;\n","import React, { useEffect, useState } from \"react\";\nimport db from \"database\";\nimport { ref, child, onValue, off, set, remove } from \"firebase/database\";\nimport Lottie from \"react-lottie\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport { themeState } from \"store/theme\";\nimport { modalState } from \"store/modal\";\nimport { userTeamState, userRoomState, userIDState } from \"store/user\";\nimport { color } from \"style/theme\";\nimport { TeamTypes } from \"types/player\";\nimport Modal from \"components/Global/atoms/Modal\";\nimport Button from \"components/Global/atoms/Button\";\nimport mainFireWork from \"assets/fireworks/16764-firework-animaiton.json\";\nimport subFireWork from \"assets/fireworks/14438-fireworks.json\";\nimport thirdFireWork from \"assets/fireworks/lf30_editor_he0cup9w.json\";\nimport sleep from \"util/sleep\";\nimport { GameStatusTypes, ReadyTypes } from \"types/types\";\n\nconst AninimationBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n\n  & > div {\n    &:nth-child(1) {\n      position: absolute;\n      left: -30px;\n      top: -100px;\n    }\n    &:nth-child(2) {\n      position: absolute;\n      left: 30px;\n      top: 300px;\n    }\n    &:nth-child(3) {\n      position: absolute;\n      left: -10px;\n      top: 20px;\n    }\n    &:nth-child(4) {\n      position: absolute;\n      left: 100px;\n      top: 20px;\n    }\n    &:nth-child(5) {\n      position: absolute;\n      left: 50px;\n      top: 400px;\n    }\n    &:nth-child(6) {\n      position: absolute;\n      left: -80px;\n      top: -20px;\n    }\n    &:nth-child(7) {\n      position: absolute;\n      left: -50%;\n      top: 25%;\n    }\n    &:nth-child(8) {\n      position: absolute;\n      left: 20%;\n      top: 60%;\n    }\n    &:nth-child(9) {\n      position: absolute;\n      left: -30%;\n      bottom: 10%;\n    }\n    &:nth-child(10) {\n      position: absolute;\n      left: 0;\n      bottom: 10%;\n    }\n    &:nth-child(11) {\n      position: absolute;\n      left: -30%;\n      top: 10%;\n    }\n    &:nth-child(12) {\n      position: absolute;\n      left: -50%;\n      top: 60%;\n    }\n  }\n`;\n\nconst Animations = () => {\n  const [delay, toggleDelay] = useState(false);\n\n  const setDelay = async () => {\n    await sleep(600);\n    toggleDelay(true);\n  };\n\n  useEffect(() => {\n    setDelay();\n  }, []);\n\n  const mainFireWorkData = {\n    loop: true,\n    autoplay: true,\n    animationData: mainFireWork,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const subFireWorkData = {\n    loop: true,\n    autoplay: true,\n    animationData: subFireWork,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const thirdFireWorkData = {\n    loop: true,\n    autoplay: true,\n    animationData: thirdFireWork,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <AninimationBox>\n      {delay && <Lottie options={thirdFireWork} height={500} width={500} />}\n      {delay && <Lottie options={mainFireWorkData} height={600} width={600} />}\n      {delay && <Lottie options={thirdFireWork} height={500} width={500} />}\n      <Lottie options={mainFireWorkData} height={300} width={300} />\n      {delay && <Lottie options={thirdFireWork} height={250} width={300} />}\n      <Lottie options={subFireWorkData} height={300} width={300} />\n      <Lottie options={thirdFireWorkData} height={300} width={300} />\n      {delay && <Lottie options={thirdFireWorkData} height={300} width={300} />}\n      <Lottie options={subFireWorkData} height={200} width={500} />\n      <Lottie options={subFireWorkData} height={400} width={400} />\n      <Lottie options={mainFireWorkData} height={500} width={500} />\n      <Lottie options={thirdFireWorkData} height={400} width={400} />\n    </AninimationBox>\n  );\n};\n\nconst themeData = {\n  light: {\n    bg: \"white\",\n    title_bg: color.$pink_color,\n    border: \"none\",\n    title_fg: \"white\",\n    win_fg: color.$default_font_color,\n  },\n  dark: {\n    bg: color.$dark_dim_bg_color,\n    title_bg: \"transparent\",\n    border: `1px solid ${color.$fluorescent_pink_color}`,\n    title_fg: color.$fluorescent_pink_color,\n    win_fg: color.$fluorescent_yellow_color,\n  },\n};\n\nconst ResultBox = styled.div`\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: white;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.bg};\n  border: ${({ theme }) => theme.border};\n\n  .title {\n    font-size: 20px;\n    letter-spacing: 5px;\n    text-align: center;\n    color: white;\n    padding: 5px 0;\n    color: ${({ theme }) => theme.title_fg};\n    background-color: ${({ theme }) => theme.title_bg};\n    border-bottom: ${({ theme }) => theme.border};\n  }\n\n  .content {\n    box-sizing: border-box;\n    padding: 15px;\n\n    .text {\n      text-align: center;\n      letter-spacing: 3px;\n      margin-bottom: 25px;\n      color: ${({ theme }) => theme.win_fg};\n\n      .hint {\n        margin-top: 5px;\n        letter-spacing: 1px;\n        font-size: 12px;\n        color: ${color.$unable_font_color};\n      }\n    }\n  }\n\n  .button_area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 100;\n\n    & > button {\n      width: 80%;\n      & + button {\n        margin-top: 10px;\n      }\n    }\n  }\n`;\n\ninterface ContentProperty {\n  isUserWin: boolean;\n  refreshGame: () => void;\n  winTeam: TeamTypes | null;\n  openConfirmLeaveModal: () => void;\n  setReadyStatus: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Content = (props: ContentProperty) => {\n  const {\n    winTeam,\n    isUserWin,\n    openConfirmLeaveModal,\n    refreshGame,\n    setReadyStatus,\n  } = props;\n\n  const theme = useRecoilValue(themeState);\n  const userID = useRecoilValue(userIDState);\n  const roomId = useRecoilValue(userRoomState);\n  const teamName = winTeam === TeamTypes.TeamOne ? \"草莓糕\" : \"可麗露\";\n  const initModalType = useResetRecoilState(modalState);\n  const history = useHistory();\n\n  const roomRef = ref(db, roomId);\n  const eventRef = child(roomRef, \"event\");\n\n  const buttonColor = {\n    light: {\n      yellow_button: color.$highlight_color,\n      orange_button: color.$orange_color,\n      green_button: color.$green_color,\n    },\n    dark: {\n      yellow_button: color.$fluorescent_orange_color,\n      orange_button: color.$fluorescent_yellow_color,\n      green_button: color.$fluorescent_green_color,\n    },\n  };\n\n  useEffect(() => {\n    listenOnOneMoreGame();\n    return () => removeOneMoreGameListener();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const startNewGame = () => {\n    refreshGame();\n    setReadyStatus(false);\n  };\n\n  const listenOnOneMoreGame = () => {\n\tconst oneMoreGame = child(roomRef, ReadyTypes.OneMoreGame);\n    onValue(oneMoreGame, async (data) => {\n      if (data.val()) {\n        startNewGame();\n\t\tremove(oneMoreGame);\n      }\n    });\n  };\n\n  const removeOneMoreGameListener = () => {\n    off(eventRef);\n  };\n\n  const backToWaitRoom = () => {\n    const toPath = `/w/${roomId}/${userID}`;\n    history.push(toPath);\n    initModalType();\n\tset(eventRef, GameStatusTypes.ChangeMate)\n  };\n\n  return (\n    <ResultBox theme={themeData[theme]} className=\"result_box\">\n      <p className=\"title\">勝負揭曉</p>\n      <div className=\"content\">\n        <div className=\"text\">\n          {isUserWin ? (\n            <>\n              <p>\n                🎉恭喜<span>{teamName}</span>贏惹🎉\n              </p>\n              <p className=\"hint\">請享受贏家才有的煙火</p>\n            </>\n          ) : (\n            <>\n              <p>\n                🥲NO～<span>{teamName}</span>贏惹🥲\n              </p>\n              <p className=\"hint\">(別氣餒！努力獲勝就能看煙火！)</p>\n            </>\n          )}\n        </div>\n        <div className=\"button_area\">\n          <Button\n            onClick={backToWaitRoom}\n            color={buttonColor[theme].yellow_button}\n          >\n            更換隊友\n          </Button>\n          <Button\n            onClick={() => {\n              setReadyStatus(true);\n            }}\n            color={buttonColor[theme].orange_button}\n          >\n            再玩一局\n          </Button>\n          <Button\n            onClick={openConfirmLeaveModal}\n            color={buttonColor[theme].green_button}\n          >\n            翻桌不玩\n          </Button>\n        </div>\n      </div>\n    </ResultBox>\n  );\n};\n\ninterface ModalResultProperty {\n  active: boolean;\n  winTeam: TeamTypes | null;\n  refreshGame: () => void;\n  openConfirmLeaveModal: () => void;\n  setReadyStatus: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ModalResult = (props: ModalResultProperty) => {\n  const {\n    active,\n    winTeam,\n    openConfirmLeaveModal,\n    refreshGame,\n    setReadyStatus,\n  } = props;\n  const userTeam = useRecoilValue(userTeamState);\n  const isUserWin = winTeam === userTeam;\n\n  return (\n    <Modal active={active} className=\"result_modal\">\n      <Content\n        setReadyStatus={setReadyStatus}\n        winTeam={winTeam}\n        isUserWin={isUserWin}\n        refreshGame={refreshGame}\n        openConfirmLeaveModal={openConfirmLeaveModal}\n      />\n      {isUserWin && <Animations />}\n    </Modal>\n  );\n};\n\nexport default ModalResult;\n","export default __webpack_public_path__ + \"static/media/bumpintowindow.fd5eab02.gif\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"database\";\nimport { child, ref, set, remove } from \"firebase/database\";\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\nimport ModalBinding from \"components/GameRoom/Modal/ModalBinding\";\nimport ModalGiveUp from \"components/GameRoom/Modal/ModalGiveUp\";\nimport ModalResult from \"components/GameRoom/Modal/ModalResult\";\nimport ModalConfirm from \"components/Global/molecules/ModalConfirm\";\nimport Loading from \"components/Global/molecules/Loading\";\nimport { trumpState, isGameEndState } from \"store/game\";\nimport { userRoomState, userIDState } from \"store/user\";\nimport { modalState } from \"store/modal\";\nimport { OKtoPlay } from \"store/deck\";\nimport { ReadyTypes, GameStatusTypes } from \"types/types\";\nimport useUserReadyStatus from \"util/hook/useUserReadyStatus\";\n\nimport Kanahei from \"assets/bumpintowindow.gif\";\n\ninterface ModalRootProperty {\n  initGameData: () => Promise<void>;\n}\n\nconst ModalRoot = (props: ModalRootProperty) => {\n  const { initGameData } = props;\n  const history = useHistory();\n  const trump = useRecoilValue(trumpState);\n  const userID = useRecoilValue(userIDState);\n  const roomId = useRecoilValue(userRoomState);\n  const isOKtoPlay = useRecoilValue(OKtoPlay);\n  const isGotWinner = useRecoilValue(isGameEndState);\n  const [modalType, setModalType] = useRecoilState(modalState);\n  const initModalType = useResetRecoilState(modalState);\n  const [{ userReadyStatus }, { setReadyStatus }] = useUserReadyStatus(\n    ReadyTypes.OneMoreGame\n  );\n  const roomRef = ref(db, roomId);\n  const eventRef = child(roomRef, \"event\");\n\n  const backToWaitRoom = () => {\n    const toPath = `/w/${roomId}/${userID}`;\n    history.push(toPath);\n    initGameData();\n    initModalType();\n    remove(eventRef);\n  };\n\n  const leaveGame = async () => {\n    await remove(child(roomRef, `playersInfo/${userID}`));\n    await set(eventRef, GameStatusTypes.SomeoneLeaveGame);\n    history.push(\"/\");\n  };\n\n  const refreshGame = async () => {\n    await initGameData();\n    remove(eventRef);\n  };\n\n  const closeModal = () => initModalType();\n\n  return (\n    <div className=\"modal_root\">\n      <ModalBinding active={!trump && isOKtoPlay} />\n      <ModalGiveUp active={!isOKtoPlay} />\n      <ModalResult\n        setReadyStatus={setReadyStatus}\n        active={!!isGotWinner}\n        refreshGame={() => refreshGame()}\n        openConfirmLeaveModal={() => setModalType(\"cofirm-leave\")}\n        winTeam={isGotWinner}\n      />\n      <ModalConfirm\n        active={modalType === \"cofirm-leave\"}\n        className=\"confirm_leave_modal\"\n        description=\"確定要離開嗎？\"\n        onConfirmText=\"確定\"\n        onCancelText=\"繼續玩\"\n        imageUrl={Kanahei}\n        onConfirm={leaveGame}\n        onCancel={closeModal}\n      />\n      <Loading\n        active={modalType === GameStatusTypes.SomeoneLeaveGame}\n        type={modalType}\n        countdown={3}\n        action={backToWaitRoom}\n        actionText=\"回到等待室\"\n        text=\"有人離開嚕！\"\n        noOpacity\n\t\tisCountdown\n      />\n      <Loading\n        active={modalType === GameStatusTypes.ChangeMate}\n        type={modalType}\n        countdown={3}\n        action={backToWaitRoom}\n        actionText=\"回到等待室\"\n        text=\"有人要換隊友唷！\"\n        noOpacity\n\t\tisCountdown\n      />\n      <Loading\n        active={modalType === GameStatusTypes.Restart}\n        type={modalType}\n        countdown={3}\n        action={() => refreshGame()}\n        actionText=\"重新牌局\"\n        text=\"倒牌啦！\"\n        noOpacity\n\t\tisCountdown\n      />\n      <Loading\n        active={userReadyStatus}\n        cancelReady={() => setReadyStatus(false)}\n      />\n    </div>\n  );\n};\n\nexport default ModalRoot;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport Suit from 'components/Global/atoms/Suit';\nimport { suitColor } from 'util/suit'\nimport { SuitColor, CardSuitType } from 'types/card';\nimport { color } from \"style/theme\";\nimport { themeState } from 'store/theme';\n\nfunction numberInPoker(number: number) {\n    const poker = [\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"10\",\n        \"J\",\n        \"Q\",\n        \"K\",\n        \"A\",\n    ];\n    return poker[number - 1];\n};\n\ninterface PokerCardProperty {\n    suitColor: SuitColor;\n}\n\nconst themeData = {\n    light: {\n        front_bg: '#FAF9F8',\n        back_bg: '#eaeaea',\n        border: 'white',\n        suit_red: color.$red_suit_color,\n        suit_black: color.$black_suit_color,\n        pattern: 'white',\n        shadow: color.$shadow,\n    },\n    dark: {\n        front_bg: color.$dark_bg_color,\n        back_bg: '#312D28',\n        border: color.$dark_dim_border_color,\n        suit_red: color.$dark_red_suit_color,\n        suit_black: color.$dark_black_suit_color,\n        pattern: color.$dark_dim_bg_color,\n        shadow: 'transparent',\n    },\n}\n\nconst PokerCard = styled.div<PokerCardProperty>`\n    z-index: 1;\n    display: flex;\n    justify-content: space-between;\n    border-radius: 3px;\n    box-sizing: border-box;\n    padding: 2px;\n    transition: all .3s;\n    border: 1px solid ${({ theme }) => theme.border};\n    background-color: ${({ theme }) => theme.front_bg};\n\n    .card_info {\n        display: flex;\n        flex: 0 1 auto;\n        flex-direction: column;\n\n        &.reverse {\n            transform: rotate(180deg);\n        }\n\n        .number,\n        .suit {\n            font-size: 12px;\n            text-align: center;\n            transition: all .3s;\n            color: ${({ suitColor, theme }) => theme[`suit_${suitColor}`]};\n\n            &.suit {\n                margin-top: 1px;\n            }\n        }\n    }\n\n    .pattern {\n        flex: 1 1 100%;\n        margin: 10px 4px;\n        transition: all .3s;\n        background-color: ${({ theme }) => theme.pattern};\n    }\n\n    &.group {\n        width: 16vw;\n        height: 23vw;\n        & + .group {\n            margin-left: -11vw;\n        }\n\n        &.other_player_card{\n            background-color: ${({ theme }) => theme.back_bg};;\n        }\n    }\n\n    &.played_card {\n        width: 12.5vw;\n        height: 15.5vw;\n        box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.shadow};\n    }\n\n    &.isPicked{\n        flex: 0 0 auto;\n        transform: translateY(-30%) scale(1.1);\n\n        &:not(:first-child){\n            margin-left: -7vw !important;\n        }\n    }\n\n    &.isNotPicked{\n        &:last-child {\n            flex: 0 0 auto;\n        }\n    }\n`\n\nexport interface CardProperty {\n    number?: number;\n    suit?: CardSuitType;\n    className?: string;\n    onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n    hasDetail?: Boolean;\n    nowPickSuit?: CardSuitType | null;\n}\n\nconst Card = (props: CardProperty) => {\n    const { number, suit, className, hasDetail = false, onClick = () => { }, nowPickSuit } = props;\n    const theme = useRecoilValue(themeState);\n    const numberOnCard = number ? numberInPoker(number) : null;\n    const sameSuit = nowPickSuit && (suit === nowPickSuit);\n    const isNotPicked = nowPickSuit && (suit !== nowPickSuit);\n\n    return (\n        <PokerCard\n            theme={themeData[theme]}\n            onClick={onClick}\n            className={classnames(className, \"poker_card\",\n                {\n                    'isPicked': sameSuit,\n                    'isNotPicked': isNotPicked,\n                })}\n            suitColor={suitColor(suit)}\n        >\n            {hasDetail && (\n                <>\n                    <div className=\"card_info\">\n                        <span className=\"number\">{numberOnCard}</span>\n                        <Suit className=\"suit\" suit={suit} />\n                    </div>\n                    <div className=\"pattern\"></div>\n                    <div className=\"card_info reverse\">\n                        <span className=\"number\">{numberOnCard}</span>\n                        <Suit className=\"suit\" suit={suit} />\n                    </div>\n                </>\n            )}\n        </PokerCard>\n    )\n\n}\n\nexport default Card","import React from \"react\";\nimport db from \"database\";\nimport { child, ref, get, update } from \"firebase/database\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { userDeckState } from \"store/deck\";\nimport {\n  isUserTurnState,\n  thisRoundSuitState,\n  isUserLastPlayerState,\n} from \"store/game\";\nimport { userNameState, userRoomState } from \"store/user\";\nimport { relationWithUser } from \"store/players\";\nimport { Card, CardSuitType } from \"types/card\";\nimport CardLayout from \"../../Card\";\n\ninterface UserHandCardsProperty {\n  className: string;\n}\nconst UserHandCards = (props: UserHandCardsProperty) => {\n  const { className } = props;\n  const roomId = useRecoilValue(userRoomState);\n  const userName = useRecoilValue(userNameState);\n  const isUserTurn = useRecoilValue(isUserTurnState);\n  const thisRoundSuit = useRecoilValue(thisRoundSuitState);\n  const isUserLastPlayer = useRecoilValue(isUserLastPlayerState);\n  const { nextPlayer } = useRecoilValue(relationWithUser);\n  const [userDeck, setUserDeck] = useRecoilState(userDeckState);\n  const [nowPickSuit, setNowPickSuit] = React.useState<CardSuitType | null>(\n    null\n  );\n  const roomRef = ref(db, roomId);\n  const gameInfoRef = child(roomRef, \"gameInfo\");\n\n  const handlePickCard = async (\n    e: React.MouseEvent<HTMLElement>,\n    card: Card\n  ) => {\n    e.stopPropagation();\n    const { suit, number } = card;\n    if (!isUserTurn) return;\n    if (!isValidCard(suit)) return setNowPickSuit(null);\n    if (suit === nowPickSuit) {\n      // 出牌\n      await playCard({ number, suit });\n      removeCardFromDeck({ number, suit });\n      setNowPickSuit(null);\n    } else {\n      setNowPickSuit(suit);\n    }\n  };\n\n  const isValidCard = (pickedSuit: CardSuitType) => {\n    if (!thisRoundSuit) return true;\n    if (thisRoundSuit && pickedSuit !== thisRoundSuit) {\n      if (userDeck.some((card) => card.suit === thisRoundSuit)) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  const playCard = async (card: Card) => {\n    const { suit, number } = card;\n    const cardsRef = child(gameInfoRef, \"thisRoundCards\");\n\n    const userPlayData = {\n      player: userName,\n      card: { number, suit },\n    };\n\n    const cards = await get(cardsRef)\n      .then((data) => {\n        if (data.exists()) {\n          return data.val();\n        } else {\n          return [];\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    let toUpdateGameInfo = {\n      thisRoundCards: [...cards, userPlayData],\n    } as any;\n\n    if (!cards.length) {\n      toUpdateGameInfo.thisRoundSuit = suit;\n    }\n\n    if (!isUserLastPlayer) {\n      toUpdateGameInfo.currentPlayer = nextPlayer;\n    }\n\n    update(gameInfoRef, toUpdateGameInfo);\n  };\n\n  const removeCardFromDeck = (card: Card) => {\n    const { suit, number } = card;\n    const newDeck = userDeck.filter((card) => {\n      const isCard = card.number === number && card.suit === suit;\n      return !isCard;\n    });\n    setUserDeck(newDeck);\n  };\n\n  return (\n    <div className={className}>\n      {userDeck.map(({ number, suit }) => (\n        <CardLayout\n          nowPickSuit={nowPickSuit}\n          onClick={(e) => handlePickCard(e, { number, suit })}\n          className=\"group user_card\"\n          key={number + suit}\n          number={number}\n          suit={suit}\n          hasDetail\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default UserHandCards;\n","import React from 'react';\nimport Card from '../../Card';\nimport generateArray from 'util/generateArray';\n\ninterface OtherUserHandCardsProperty  {\n    className: string;\n    cardAmount: number;\n}\nconst OtherUserHandCards = (props: OtherUserHandCardsProperty) => {\n    const { className, cardAmount } = props;\n    const cardArray = generateArray(cardAmount);\n    return (\n        <div className={className}>\n            {cardArray.map(card=>(\n                <Card key={card} className=\"group other_player_card\" />\n            ))}\n        </div>\n    )\n}\n\nexport default OtherUserHandCards;","import React from 'react';\nimport classnames from 'classnames';\nimport { useRecoilValue } from 'recoil';\nimport styled from 'styled-components';\nimport { relationWithUser } from 'store/players';\nimport { otherPlayerDeckState } from 'store/deck';\nimport UserHandCards from './UserHandCards';\nimport OtherUserHandCards from './OtherUserHandCards';\n\nconst CardGroup = styled.div`\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\theight: 100%;\n\n\t.cards {\n\t\tdisplay: flex;\n\n\t\t&__user {\n\t\t\tmargin-top: auto;\n\t\t\tmargin-bottom: 10px;\n\t\t\tmax-width: 90vw;\n\t\t}\n\n\t\t&__left {\n\t\t\tposition: absolute;\n\t\t\ttransform-origin: left top;\n\t\t\ttransform: rotate(90deg) translate(-50%, -50%);\n\t\t\ttop: 50%;\n\t\t\tleft: 0;\n\t\t}\n\n\t\t&__right {\n\t\t\tposition: absolute;\n\t\t\ttransform-origin: right top;\n\t\t\ttransform: rotate(-90deg) translate(50%, -50%);\n\t\t\ttop: 50%;\n\t\t\tright: 0;\n\t\t}\n\n\t\t&__cross {\n\t\t\tmargin-top: -15px;\n\t\t}\n\n\t}\n`\n\nconst Cards = () => {\n\tconst order = ['cross', 'left', 'right', 'user'];\n\tconst { teammate, nextPlayer, previousPlayer} = useRecoilValue(relationWithUser);\n\tconst otherPlayerDeck = useRecoilValue(otherPlayerDeckState);\n\tconst orderedPlayers = [teammate, nextPlayer, previousPlayer];\n\n\treturn (\n\t\t<CardGroup className=\"card_group\">\n\t\t\t{order.map((order, index) => (\n\t\t\t\torder === 'user'\n\t\t\t\t\t? <UserHandCards key={order} className={classnames(\"cards\", `cards__${order}`)} />\n\t\t\t\t\t: <OtherUserHandCards \n\t\t\t\t\t\tkey={order} \n\t\t\t\t\t\tclassName={classnames(\"cards\", `cards__${order}`)} \n\t\t\t\t\t\tcardAmount={otherPlayerDeck[orderedPlayers[index]]}/>\n\t\t\t))}\n\t\t</CardGroup >\n\t)\n}\n\nexport default Cards;","import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { useRecoilValue } from 'recoil';\nimport { TeamTypes } from 'types/player';\nimport { ThemeTypes } from 'types/theme';\nimport { themeState } from 'store/theme';\nimport { relationWithUser } from 'store/players';\nimport { userNameState, userTeamState } from 'store/user';\nimport { currentPlayerName, trumpState } from 'store/game';\nimport ThinkingIcon from 'components/GameRoom/ThinkingIcon';\nimport { color } from 'style/theme'\n\nconst themeData = {\n    light: {\n        name_bg: 'white',\n        fc: color.$title_font_color,\n        bw: '0px',\n        border: 'transparent',\n        team: {\n            team1: color.$pink_color,\n            team2: color.$brown_color,\n        },\n        highlight_color_team: {\n            team1: color.$highlight_color,\n            team2: color.$highlight_color,\n        },\n\n    },\n    dark: {\n        name_bg: color.$dark_dim_bg_color,\n        fc: color.$light_pink_color,\n        bw: '1px',\n        team: {\n            team1: color.$fluorescent_pink_color,\n            team2: color.$fluorescent_yellow_color\n        },\n        highlight_color_team: {\n            team1: color.$fluorescent_pink_color,\n            team2: color.$fluorescent_yellow_color\n        },\n    },\n}\n\ninterface TagProperty {\n    themeType: ThemeTypes;\n    team: TeamTypes;\n}\n\nconst Tag = styled.div<TagProperty>`\n    position: absolute;\n\n    &.is_player_turn {\n        .player_info {\n            border-width: 2px;\n            border-color: ${({ theme, team }) => theme.highlight_color_team[team]};\n        }\n    }\n\n    &.tag {\n        &_cross {\n            top: 0;\n            transform: translate(-50%, -50%);\n            left: 50%;\n        }\n        &_left {\n            transform-origin: left top;\n            transform: rotate(-90deg) translate(-50%, -50%);\n            top: 50%;\n            left: 0;\n        }\n        &_right {\n            transform: rotate(90deg) translate(50%, -50%);\n            transform-origin: right top;\n            top: 50%;\n            right: 0;\n        }\n        &_user {\n            bottom: 0px;\n            left: 50%;\n            transform: translate(-50%, 50%);\n        }\n    }\n\n    .player_info {\n        display: flex;\n        vertical-align: middle;\n        border-radius: 5px;\n        font-size: 14px;\n        line-height: 26px;\n        background-color: white;\n        overflow: hidden;\n        padding-right: 10px;\n        border-style: solid;\n        border-width: ${({ theme }) => theme.bw};\n        border-color: ${({ themeType, theme, team }) => (themeType === ThemeTypes.Light ? 'transparent' : theme.team[team])};\n        background-color: ${({ theme }) => theme.name_bg};\n        color: ${({ theme }) => theme.fc};\n\n        .team {\n            padding: 5px 10px;\n            transition: .3s all;\n            background-color: ${({ theme, team }) => theme.team[team]};\n        }\n\n        .name {\n            max-width: 32vw;\n            letter-spacing: 1px;\n            padding-left: 10px;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n    }\n`\n\ninterface PlayerNameTagProperty {\n    className: string;\n    player: string;\n    team: TeamTypes;\n    isCurrentPlayer: boolean;\n}\n\nconst PlayerNameTag = (props: PlayerNameTagProperty) => {\n    const { className, isCurrentPlayer = false, player, team } = props;\n    const theme = useRecoilValue(themeState);\n    return (\n        <Tag\n            theme={themeData[theme]}\n            themeType={theme}\n            team={team}\n            className={classnames(className, { \"is_player_turn\": isCurrentPlayer })}>\n            {isCurrentPlayer && <ThinkingIcon className=\"on_table\" />}\n            <div className=\"player_info\">\n                <div className=\"team\"></div>\n                <div className=\"name\">{player}</div>\n            </div>\n        </Tag>\n    )\n}\n\nconst Names = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n`\n\nconst Nameplate = () => {\n    const players = useRecoilValue(relationWithUser);\n    const user = useRecoilValue(userNameState);\n    const currentPlayer = useRecoilValue(currentPlayerName);\n    const trump = useRecoilValue(trumpState);\n    const userTeam = useRecoilValue(userTeamState);\n    const order = ['cross', 'left', 'right', 'user'];\n    const orderedPlayers = [players.teammate, players.nextPlayer, players.previousPlayer, user];\n    const anotherTeam = [TeamTypes.TeamOne, TeamTypes.TeamTwo].find(team => team !== userTeam) as TeamTypes;\n    const teamArray = [userTeam, anotherTeam, anotherTeam, userTeam];\n\n    return (\n        <Names className=\"players_name\">\n            {orderedPlayers.map((player, index) => (\n                <PlayerNameTag\n                    key={order[index]}\n                    className={`tag_${order[index]}`}\n                    player={player}\n                    isCurrentPlayer={!!trump && (currentPlayer === player)}\n                    team={teamArray[index] || TeamTypes.TeamOne}\n                />\n            )\n            )}\n        </Names>\n    )\n}\n\nexport default Nameplate","import React, { useEffect } from \"react\";\nimport db from \"database\";\nimport {\n  child,\n  ref,\n  onValue,\n  off,\n  update,\n} from \"firebase/database\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\nimport { Team } from \"types/player\";\nimport { Card as CardInterface, CardSuitType } from \"types/card\";\nimport { userRoomState, userNameState } from \"store/user\";\nimport { teamScoresState } from \"store/score\";\nimport { userWinTricksState } from \"store/winTricks\";\nimport { otherPlayerDeckState } from \"store/deck\";\nimport {\n  thisRoundCardsState,\n  isThisRoundEndState,\n  trumpState,\n  thisRoundSuitState,\n} from \"store/game\";\nimport { relationWithUser, OrderedStartFromTeamOne } from \"store/players\";\nimport { getBiggestCard } from \"util/game\";\nimport sleep from \"util/sleep\";\nimport Card from \"components/GameRoom/Card\";\n\nconst CardGroup = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  .played_card {\n    position: absolute;\n    &.user {\n      left: 50%;\n      bottom: 25px;\n      transform: translateX(-50%);\n    }\n    &.cross {\n      left: 50%;\n      top: 25px;\n      transform: translateX(-50%);\n    }\n    &.left {\n      left: 25px;\n      top: 50%;\n      transform-origin: left top;\n      transform: rotate(90deg) translate(-50%, -100%);\n    }\n    &.right {\n      right: 25px;\n      top: 50%;\n      transform-origin: right top;\n      transform: rotate(90deg) translateX(50%);\n    }\n  }\n`;\n\nconst PlayedCard = () => {\n  const roomId = useRecoilValue(userRoomState);\n  const user = useRecoilValue(userNameState);\n  const { teammate, nextPlayer, previousPlayer } = useRecoilValue(\n    relationWithUser\n  );\n  const teamArray = useRecoilValue(OrderedStartFromTeamOne);\n  const trump = useRecoilValue(trumpState);\n  const currentSuit = useRecoilValue(thisRoundSuitState);\n  const [thisRoundCards, updateThisRoundCards] = useRecoilState(\n    thisRoundCardsState\n  );\n  const [teamScores, updateTeamScores] = useRecoilState(teamScoresState);\n  const isThisRoundEnd = useRecoilValue(isThisRoundEndState);\n  const setOtherPlayerDeck = useSetRecoilState(otherPlayerDeckState);\n  const setUserWinTricks = useSetRecoilState(userWinTricksState);\n  const roomRef = ref(db, roomId);\n  const gameInfoRef = child(roomRef, \"gameInfo\");\n\n  useEffect(() => {\n    const cardsRef = child(gameInfoRef, \"thisRoundCards\");\n    onValue(cardsRef, (d) => {\n      const cards = d.val() || [];\n      updateThisRoundCards(orderCards(cards));\n\n      const playedPlayer = cards[cards.length - 1]?.player;\n      if (playedPlayer && playedPlayer !== user) {\n        setOtherPlayerDeck((pre) => ({\n          ...pre,\n          [playedPlayer]: pre[playedPlayer] - 1,\n        }));\n      }\n    });\n\n    return () => {\n      off(cardsRef);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isThisRoundEnd) {\n      handleRoundEnded();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isThisRoundEnd]);\n\n  const handleRoundEnded = async () => {\n    await sleep(2000);\n\n    const winner = getRoundWinner();\n    updatePoints(winner);\n    if (winner === user) {\n      collectThisTrick();\n    }\n\n    update(gameInfoRef, {\n      currentPlayer: winner,\n      thisRoundSuit: null,\n      thisRoundCards: null,\n    });\n  };\n\n  const getRoundWinner = () => {\n    const winnerIndex = getBiggestCard(\n      trump?.suit as CardSuitType,\n      currentSuit as CardSuitType,\n      thisRoundCards\n    );\n    const playersOrder = [teammate, nextPlayer, previousPlayer, user];\n    return playersOrder[winnerIndex];\n  };\n\n  const updatePoints = (winner: string) => {\n    const winnerTeam = teamArray\n      .map((player, i) => ({ player, team: `team${(i % 2) + 1}` }))\n      .find((p) => p.player === winner)?.team as Team;\n\n    if (winnerTeam) {\n      updateTeamScores({\n        ...teamScores,\n        [winnerTeam]: teamScores[winnerTeam] + 1,\n      });\n    }\n  };\n\n  interface PlayedCard {\n    player: string;\n    card: CardInterface;\n  }\n\n  const orderCards = (cards: PlayedCard[]) => {\n    if (!cards.length) return [];\n    const orderedPlayers = [teammate, nextPlayer, previousPlayer, user];\n    const result = orderedPlayers.map((playerName) => {\n      const card = cards.find(\n        (card) => card.player === playerName\n      ) as PlayedCard | null;\n      return card?.card;\n    });\n    return result as CardInterface[];\n  };\n\n  const collectThisTrick = () => {\n    setUserWinTricks((pre) => [...pre, thisRoundCards]);\n  };\n\n  return (\n    <CardGroup className=\"played_cards_group\">\n      {thisRoundCards.map((card, index) => {\n        const order = [\"cross\", \"left\", \"right\", \"user\"];\n        return (\n          card && (\n            <Card\n              key={order[index]}\n              className={classnames(\"played_card\", order[index])}\n              number={card.number}\n              suit={card.suit}\n              hasDetail\n            />\n          )\n        );\n      })}\n    </CardGroup>\n  );\n};\n\nexport default PlayedCard;\n","import { Card, CardSuitType } from 'types/card';\n\nconst countPoint = (trump: CardSuitType, currentSuit: CardSuitType, card: Card) => {\n    let point = 0;\n    if (card.suit === trump) {\n        point += 20;\n    }\n    if (card.suit !== trump && card.suit !== currentSuit) {\n        point -= 20;\n    }\n    point += card.number;\n    return point;\n};\n\nexport const getBiggestCard = (trump: CardSuitType, currentSuit: CardSuitType, cards: Card[]) => {\n    const point = cards.map((card) => {\n        const point = countPoint(trump, currentSuit, card);\n        return point;\n    });\n\n    const winnerIndex = point.indexOf(Math.max(...point));\n    return winnerIndex;\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from \"style/theme\";\nimport Nameplate from './Nameplate';\nimport PlayedCard from './PlayedCard';\n\nconst Table = styled.div`\n    width: 60vw;\n    height: 60vw;\n    border-radius: 10px;\n    position: relative;\n    transition: all .3s;\n    border: 1px solid ${({theme}) => theme.border_color };\n    background-color: ${({theme}) => theme.bg };\n`\n\n\nconst themeData = {\n    light: { \n        bg: '#f9f9f9',\n        border_color: 'transparent'\n    },\n    dark: { \n        bg: color.$dark_dim_bg_color,\n        border_color: color.$dark_dim_border_color\n    },\n}\n\nconst CardTable = () => {\n    const [theme] = useRecoilState(themeState);\n    return (\n        <Table theme={themeData[theme]} className=\"card_table\">\n            <PlayedCard />\n            <Nameplate />\n        </Table>\n    )\n}\n\nexport default CardTable","import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames'\nimport { color } from 'style/theme';\nimport { ThemeTypes } from 'types/theme';\n\nconst Box = styled.div`\n    display: flex;\n    border-radius: 5px;\n    overflow: hidden;\n    transition: .3s all;\n    border: ${({ theme }) => theme.border}; \n\n    .title {\n        flex-grow: 0;\n        text-align: center;\n        padding: 5px 10px;\n        color: white;\n        font-size: 14px;\n        letter-spacing: 2px;\n        writing-mode: vertical-lr;\n        transition: .3s all;\n        color: ${({ theme }) => theme.fc};\n        border-right: ${({ theme }) => theme.border};\n        background-color: ${({ theme }) => theme.title_bg};\n    }\n\n    .content {\n        flex-grow: 1;\n        padding: 8px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        transition: .3s all;\n        background-color: ${({ theme }) => theme.bg};\n    }\n`\n\nconst themeData = {\n    light: {\n        bg: 'white',\n        fc: 'white',\n        title_bg: color.$orange_color,\n        border: '1px solid transparent',\n    },\n    dark: {\n        bg: color.$dark_dim_bg_color,\n        fc: color.$light_pink_color,\n        title_bg: color.$dark_dim_bg_color,\n        border: '1px solid' + color.$dark_dim_border_color,\n    },\n}\n\ninterface InfoBoxProperty {\n    theme: ThemeTypes;\n    title: string;\n    children: React.ReactNode;\n    className: string;\n}\n\nconst InfoBox = (props: InfoBoxProperty) => {\n    const { theme, title, children, className } = props;\n    return(\n    <Box theme={themeData[theme]} className={classnames(\"info_box\", className)}>\n        <span className=\"title\">{title}</span>\n        <span className=\"content\">{children}</span>\n    </Box>\n)}\n\nexport default InfoBox;","import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport Suit from 'components/Global/atoms/Suit';\nimport { themeState } from 'store/theme';\nimport { trumpState } from 'store/game';\nimport { teamShouldWinState } from 'store/bind';\nimport { teamScoresState } from 'store/score';\nimport { color } from 'style/theme';\nimport { suitColor } from 'util/suit'\nimport { TeamTypes } from 'types/player';\nimport InfoBox from './InfoBox';\n\nconst Board = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 60vw;\n    margin-top: 40px;\n\n    & > div {\n        &:first-child {\n            flex: 1 0 auto;\n        }\n        &:last-child {\n            flex: 1.2 0 auto;\n            margin-left: 15px;\n        }\n    }\n`\n\nconst Point = styled.div`\n        &.team1 {\n            .team__name {\n                transition: .3s all;\n                background-color: ${({ theme }) => theme.team1color};\n            }\n        }\n\n        &.team2 {\n            &::before {\n            content: \"\";\n            display: block;\n            width: 100%;\n            border-top: 1px solid ${({ theme }) => theme.border};\n            margin: 5px 0;\n            }\n            .team__name {\n                transition: .3s all;\n                background-color: ${({ theme }) => theme.team2color};\n            }\n        }\n\n        .team__name {\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        margin-right: 10px;\n        border-radius: 100%;\n        }\n\n        .team__tricks {\n        letter-spacing: 1px;\n        .now_win {\n            font-size: 14px;\n            margin-right: 3px;\n            transition: .3s all;\n            color: ${({theme}) => theme.fc};\n        }\n        .should_win {\n            font-size: 12px;\n            color: #7e7e7e;\n        }\n    }\n`\n\ninterface SuitProperty {\n    suitColor: string;\n}\n\nconst StyledSuit = styled(Suit)<SuitProperty>`\n    font-size: 20px;\n    transition: .3s all;\n    color: ${({suitColor, theme}) => theme.suit[suitColor]};\n`\n\nconst themeData = {\n    light: {\n        border: color.$orange_color,\n        fc: color.$default_font_color,\n        suit: {\n            red: color.$red_suit_color,\n            black: color.$black_suit_color\n        },\n        team1color: color.$pink_color,\n        team2color: color.$brown_color\n    },\n    dark: {\n        border: color.$dark_dim_border_color,\n        fc: color.$light_pink_color,\n        suit: {\n            red: color.$dark_red_suit_color,\n            black: color.$light_pink_color,\n        },\n        team1color:color.$fluorescent_pink_color,\n        team2color: color.$fluorescent_yellow_color\n    },\n}\n\ninterface PointInfoProperty {\n    team: TeamTypes;\n}\nconst PointInfo = (props: PointInfoProperty) => {\n    const { team } = props;\n    const [theme] = useRecoilState(themeState);\n    const teamShouldWin = useRecoilValue(teamShouldWinState);\n    const teamScores = useRecoilValue(teamScoresState);\n    return (\n        <Point theme={themeData[theme]} className={classnames('team', team)}>\n            <span className=\"team__name\"></span>\n            <span className=\"team__tricks\">\n                <span className=\"now_win\">{teamScores[team]}</span>\n                <span className=\"should_win\">/{teamShouldWin[team]}</span>\n            </span>\n        </Point>\n    )\n}\n\nconst MainInfo = () => {\n    const [theme] = useRecoilState(themeState);\n    const trump = useRecoilValue(trumpState);\n    return (\n        <Board theme={themeData[theme]} className=\"main_info\">\n            <InfoBox\n                theme={theme}\n                title=\"王牌\"\n                className=\"trump\">\n                <StyledSuit \n                    theme={themeData[theme]}\n                    suitColor={suitColor(trump?.suit)}\n                    suit={trump?.suit ? trump.suit : null}\n                    className=\"suit\"\n                />\n            </InfoBox>\n            <InfoBox theme={theme} title=\"戰況\" className=\"team\">\n                <PointInfo team={TeamTypes.TeamOne} />\n                <PointInfo team={TeamTypes.TeamTwo} />\n            </InfoBox>\n        </Board>\n    )\n}\n\nexport default MainInfo;","import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { navState } from 'store/user';\nimport { color } from \"style/theme\";\n\ninterface TogglerProperty  {\n    border: string;\n}\n\nconst Toggler = styled.button<TogglerProperty>`\n        transform: translateX(-50%);\n        display: flex;\n        align-items: center;\n        width: 17vw;\n        height: 17vw;\n        padding: 0;\n        border-radius: 50%;\n        transition: 0.4s all;\n        border: 1px solid ${({ border }) => border};\n        background-color: ${({ color }) => color};\n`\n\ninterface SideNavProperty  {\n    height: string;\n}\n\nconst SideNav = styled.div<SideNavProperty>`\n    display: flex;\n    position: absolute;\n    left: 100%;\n    height: ${({ height }) => height};\n    transition: .3s all ease-in-out;\n\n    &.won_tricks {\n        bottom: 7vw;\n        width: 62vw;\n    }\n\n    &.settings {\n        bottom: 15vw;\n        width: 55vw;\n    }\n\n    &.isOpen {\n        transform: translateX(-100%);\n    }\n\n    &.hide {\n        transform: translateX(50%);\n    }\n\n    .content_box {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        padding: 8px 0;\n        margin-top: -15px;\n        border-bottom-left-radius: 6px;\n        border-top-left-radius: 6px;\n        overflow-y: scroll;\n        transition:  0.3s all;\n        color: ${({ theme }) => theme.fg};\n        border: 1px solid ${({ theme }) => theme.border};\n        border-right: none;\n        background-color: ${({ theme }) => theme.bg};\n        .scroll_box{\n            width: 100%;\n            height: 100%;\n            padding: 0 10px;\n            box-sizing: border-box;\n            overflow-y: scroll;\n        }\n\n        .title {\n            text-align: center;\n            font-size: 14px;\n            letter-spacing: 1px;\n            padding-bottom: 5px;\n            margin-bottom: 5px;\n            border-bottom: 1px solid ${({ color, theme }) => {\n        if (theme === 'light') {\n            return color\n        } else {\n            return theme.border\n        };\n    }\n    }\n        }\n    }\n`\n\nconst themeData = {\n    light: {\n        bg: 'white',\n        fg: color.$default_font_color,\n        border: 'transparent',\n    },\n    dark: {\n        bg: color.$dark_dim_bg_color,\n        fg: 'white',\n        border: color.$dark_border_color,\n    },\n}\n\ninterface SideInfoProperty  {\n    title: string;\n    type: string | null;\n    renderIcon: React.ReactNode;\n    content: React.ReactNode;\n    className: string;\n    color: string;\n    height: string;\n    border: string;\n}\n\nconst SideInfo = (props: SideInfoProperty) => {\n    const { title, type, renderIcon, content, className, color, height, border } = props;\n    const [nowNav, setNowNav] = useRecoilState(navState);\n    const [theme] = useRecoilState(themeState);\n\n    const handleToggle = () => {\n        if (type === nowNav) {\n            setNowNav(null);\n        } else {\n            setNowNav(type);\n        }\n    }\n\n    return (\n        <SideNav\n            theme={themeData[theme]}\n            height={height}\n            color={color}\n            className={classnames(\n                \"side_nav\",\n                className,\n                {\n                    \"isOpen\": type === nowNav,\n                    \"hide\": nowNav && type !== nowNav\n                })}>\n            <Toggler\n                border={border}\n                onClick={handleToggle}\n                color={color}\n                className=\"toggler\">\n                {renderIcon}\n            </Toggler>\n            <div className=\"content_box\">\n                <div className=\"scroll_box\">\n                    <p className=\"title\">{title}</p>\n                    {content}\n                </div>\n            </div>\n        </SideNav>\n    )\n}\n\nexport default SideInfo","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { modalState } from 'store/modal';\nimport { navState } from 'store/user';\nimport { color } from 'style/theme';\nimport Button from 'components/Global/atoms/Button';\nimport ThemeToggler from 'components/Global/atoms/ThemeToggler';\n\nconst Item = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-left: 2px;\n    padding: 6px 0;\n    \n    &:not(:last-child) {\n        transition: 0.3s border-bottom; \n        border-bottom: 1px solid ${({ theme }) => theme.b_bottom};\n    }\n\n    & > span {\n        font-size: 13px;\n        margin-left: 5px;\n        margin-right: 10px;\n    }\n`\n\nconst SettingButton = styled(Button)`\n    padding: 5px 8px;\n`\n\nconst themeData = {\n    light: { \n        b_bottom: color.$under_line_color,\n        exit_button: color.$orange_color,\n        mail_button: color.$green_color,\n    },\n    dark: { \n        b_bottom: color.$dark_dim_border_color,\n        exit_button: color.$fluorescent_orange_color,\n        mail_button: color.$fluorescent_green_color,\n    },\n}\n\nconst Content = () => {\n    const [theme] = useRecoilState(themeState);\n    const setModalType = useSetRecoilState(modalState);\n    const setNowNav = useSetRecoilState(navState);\n    return (\n    <>\n        <Item theme={themeData[theme]}>\n            <span>更換主題</span>\n            <ThemeToggler />\n        </Item>\n        <Item theme={themeData[theme]}>\n            <span>離開遊戲</span>\n            <SettingButton \n                onClick={()=>{\n                    setNowNav(null);\n                    setModalType('cofirm-leave')\n                }}\n                color={themeData[theme].exit_button}\n            >EXIT</SettingButton>\n        </Item>\n    </>\n)}\n\nexport default Content;","import React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\nimport SideInfo from 'components/GameRoom/SideInfo';\nimport Content from './Content';\nimport { NavigatorTypes } from 'types/types';\n\n\nconst Icon = styled.div`\n    position: relative;\n    margin-left: 8px;\n\n    .cross {\n        display: block;\n        width: 13px;\n        position: absolute;\n        transition: 0.4s all, 0.3s border-top;\n        transform-origin: center;\n        border-top: 1px solid ${({ theme }) => theme.line};\n\n        &.vertical {\n            transform: rotate(90deg);\n        }\n    }\n\n    &.isOpen {\n        .cross {\n                &.vertical {\n                    transform: rotate(45deg);\n                }\n\n                &.horizental {\n                    transform: rotate(-45deg);\n                }\n            }\n    }\n`\n\nconst themeData = {\n    light: { \n        button_bg: color.$green_color,\n        line: 'white',\n        border: 'transparent'\n    },\n    dark: { \n        button_bg: color.$dark_dim_bg_color,\n        line: color.$dark_border_color,\n        border: color.$dark_border_color,\n    },\n}\n\ninterface PlusIconProperty  {\n    isOpen: boolean;\n}\n\nconst PlusIcon = (props: PlusIconProperty) => {\n    const { isOpen } = props;\n    const [theme] = useRecoilState(themeState);\n    return(\n    <Icon theme={themeData[theme]} className={classnames(\"plus_icon\",{\"isOpen\": isOpen})}>\n        <span className=\"cross vertical\"></span>\n        <span className=\"cross horizental\"></span>\n    </Icon>\n)}\n\ninterface SettingsProperty {\n    active: boolean;\n}\nconst Settings = (props: SettingsProperty) => {\n    const { active } = props;\n    const [theme] = useRecoilState(themeState);\n    return (\n        <SideInfo \n            title=\"設定\"\n            type={NavigatorTypes.Settings}\n            height=\"40vw\"\n            border={themeData[theme].border}\n            color={themeData[theme].button_bg}\n            renderIcon={<PlusIcon isOpen={active}/>}\n            content={<Content/>}\n            className=\"settings\"\n        />\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\n\nconst StyledCardIcon = styled.div`\n    display: flex;\n\n    .card {\n        display: block;\n        width: 9px;\n        height: 13px;\n        border-radius: 2px;\n        transition: 0.4s all;\n        border: 1px solid ${({ theme }) => theme.line};\n        background-color: ${({ theme }) => theme.bg};\n\n        &:nth-child(1) {\n            transform: translate(8px, 0px);\n            z-index: 12;\n        }\n    }\n\n    &.isOpen {\n        .card{\n            &:nth-child(1) {\n                    transform: rotate(-15deg) translate(7px, 1px);\n            }\n\n            &:nth-child(2) {\n                transform: rotate(8deg) translate(1px, -2px);\n            }\n        }\n    }\n`\n\nconst themeData = {\n    light: { \n        bg: color.$orange_color,\n        line: 'white',\n    },\n    dark: { \n        bg: color.$dark_bg_color,\n        line: color.$dark_border_color\n    },\n}\n\ninterface CardIconProperty  {\n    isOpen: boolean;\n}\nconst CardIcon = (props: CardIconProperty) => {\n    const { isOpen } = props;\n    const [theme] = useRecoilState(themeState);\n    return (\n    <StyledCardIcon \n        theme={themeData[theme]}\n        className={classnames(\"card_icon\",{\"isOpen\": isOpen})}>\n        <span className=\"card\"></span>\n        <span className=\"card\"></span>\n    </StyledCardIcon>\n)}\n\nexport default CardIcon;","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilValue } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { userWinTricksState } from 'store/winTricks';\nimport { color } from 'style/theme';\nimport Card from 'components/GameRoom/Card';\n\nconst List = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: 2px;\n\n    .trick {\n        display: flex;\n        justify-content: space-between;\n        padding: 6px 0;\n        & + .trick {\n            transition: 0.3s all;\n            border-top: 1px solid ${({ theme }) => theme.b_bottom};\n        }\n\n        .card_in_won_trick {\n            width: 13vw;\n            height: 16vw;\n        }\n    }\n`\n\nconst Empty = styled.p`\n    text-align: center;\n    font-size: 14px;\n    margin-top: 5px;\n    color: ${color.$unable_color};\n`\n\nconst themeData = {\n    light: { \n        b_bottom: color.$under_line_color,\n    },\n    dark: { \n        b_bottom: color.$dark_dim_border_color,\n    },\n}\n\nconst Content = () => {\n    const theme = useRecoilValue(themeState);\n    const userWinTricks = useRecoilValue(userWinTricksState);\n    return (\n        <>\n        {!userWinTricks.length\n        ?<Empty>加把勁！隊友需要你！</Empty>\n        :<List \n            theme={themeData[theme]}\n            className=\"won_trick_list\">\n            {userWinTricks.map((trick, index) => (\n            <div \n                key={'trick'+index} \n                className=\"trick\">\n                {trick.map(card =>\n                (<Card\n                    className=\"card_in_won_trick\"\n                    key={card.number+card.suit}\n                    number={card.number}\n                    suit={card.suit}\n                    hasDetail\n                />))}\n            </div>))}\n        </List>}\n        </>\n    )\n}\n\nexport default Content;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'store/theme';\nimport { color } from 'style/theme';\nimport SideInfo from 'components/GameRoom/SideInfo';\nimport Icon from './Icon';\nimport Content from './Content';\nimport { NavigatorTypes } from 'types/types';\n\nconst themeData = {\n    light: { \n        button_bg: color.$orange_color,\n        border: 'transparent'\n    },\n    dark: { \n        button_bg: color.$dark_dim_bg_color,\n        border: color.$dark_border_color,\n    },\n}\n\ninterface WonTricksProperty {\n    active: boolean;\n}\n\nconst WonTricks = (props: WonTricksProperty) => {\n    const { active } = props;\n    const [theme] = useRecoilState(themeState);\n    return(\n        <SideInfo \n            title=\"你贏的墩們\"\n            type={NavigatorTypes.WonTricks}\n            height=\"70vw\"\n            border={themeData[theme].border}\n            color={themeData[theme].button_bg}\n            renderIcon={<Icon isOpen={active}/>}\n            content={<Content/>}\n            className=\"won_tricks\"\n        />\n    )}\n\nexport default WonTricks","import React from 'react';\nimport styled from 'styled-components';\nimport Settings from 'components/GameRoom/Settings';\nimport WonTricks from 'components/GameRoom/WonTricks';\nimport { color } from 'style/theme';\nimport { navState } from 'store/user';\nimport { useRecoilValue } from 'recoil';\nimport { NavigatorTypes } from 'types/types';\n\ninterface BackgroundProperty  {\n    nowNav: string | null;\n}\n\nconst Background = styled.nav<BackgroundProperty>`\n    z-index: ${props => props.nowNav ? 30 : 0};\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: ${props => props.nowNav\n        ? color.$shadow\n        : 'transparent'\n    };\n    transition: .4s all ease-in-out;\n`\n\nconst Navbar = () => {\n    const nowNav = useRecoilValue(navState);\n    return (\n        <Background\n            nowNav={nowNav}\n            className=\"side_navbar\">\n            <WonTricks active={nowNav === NavigatorTypes.WonTricks} />\n            <Settings active={nowNav === NavigatorTypes.Settings} />\n        </Background>\n    )\n};\n\nexport default Navbar;","import React, { useEffect } from \"react\";\nimport { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\nimport db from \"database\";\nimport {\n  child,\n  ref,\n  remove,\n  onValue,\n  onDisconnect,\n  off,\n  set,\n} from \"firebase/database\";\nimport styled from \"styled-components\";\nimport { color } from \"style/theme\";\nimport { generateNewDeck } from \"util/deck\";\nimport useInitData from \"util/hook/useInitData\";\nimport { userIndexState, userRoomState, userIDState } from \"store/user\";\nimport { modalState } from \"store/modal\";\nimport { userDeckState, otherPlayerDeckState } from \"store/deck\";\nimport { themeState } from \"store/theme\";\nimport { relationWithUser } from \"store/players\";\nimport { currentPlayerName, thisRoundSuitState } from \"store/game\";\nimport ModalRoot from \"components/GameRoom/Modal/ModalRoot\";\nimport Cards from \"components/GameRoom/Cards\";\nimport CardTable from \"components/GameRoom/CardTable\";\nimport MainInfo from \"components/GameRoom/MainInfo\";\nimport Navbar from \"components/GameRoom/Navbar\";\nimport { GameStatusTypes } from \"types/types\";\n\nconst Room = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.3s background-color;\n  background-color: ${({ theme }) => theme.bg};\n`;\n\nconst themeData = {\n  light: { bg: \"#f3e9e9\" },\n  dark: { bg: color.$dark_bg_color },\n};\n\nconst GameRoom = () => {\n  const [theme] = useRecoilState(themeState);\n  const [{ initGameRoomData }] = useInitData();\n  const userIndex = useRecoilValue(userIndexState);\n  const userID = useRecoilValue(userIDState);\n  const setUserDeck = useSetRecoilState(userDeckState);\n  const setOtherPlayerDeck = useSetRecoilState(otherPlayerDeckState);\n  const { nextPlayer, teammate, previousPlayer } = useRecoilValue(\n    relationWithUser\n  );\n  const setModalType = useSetRecoilState(modalState);\n  const setNowPlayerState = useSetRecoilState(currentPlayerName);\n  const setThisRoundSuit = useSetRecoilState(thisRoundSuitState);\n  const roomId = useRecoilValue(userRoomState);\n  const roomRef = ref(db, roomId);\n  const gameInfoRef = child(roomRef, \"gameInfo\");\n\n  useEffect(() => {\n    initGameData();\n    listenOnCurrentPlayer();\n    listenOnThisRoundSuit();\n    listenOnChangeRouteEvent();\n    detectUserDisConnect();\n\n    return () => {\n      removeListeners();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const initGameData = async () => {\n    initGameRoomData();\n    dealDeck();\n    // onValue(gameInfoRef, (d) => {\n    //   const gameData = d.val();\n    //   if (!gameData) return;\n    //   const { currentPlayer } = gameData;\n    //   let toUpdate = {\n    //     currentPlayer,\n    //   } as any;\n\n    //   const newDeck = generateNewDeck();\n    //   toUpdate.deck = newDeck;\n\n    //   set(gameInfoRef, toUpdate);\n    //   dealDeck();\n    //   off(gameInfoRef);\n    // });\n  };\n\n  const dealDeck = async () => {\n    const deckRef = child(gameInfoRef, \"deck\");\n    const newDeck = generateNewDeck();\n    set(deckRef, newDeck);\n    onValue(deckRef, (data) => {\n      const deck = data.val();\n      setOtherPlayerDeck({\n        [nextPlayer]: 13,\n        [teammate]: 13,\n        [previousPlayer]: 13,\n      });\n      if (deck) {\n        setUserDeck(deck[userIndex]);\n        off(deckRef);\n      }\n    });\n  };\n\n  const listenOnCurrentPlayer = () => {\n    const currentPlayerRef = child(gameInfoRef, \"currentPlayer\");\n    onValue(currentPlayerRef, (data) => {\n      const nowPlayerID = data.val();\n      if (nowPlayerID) {\n        setNowPlayerState(nowPlayerID);\n      }\n    });\n  };\n\n  const listenOnThisRoundSuit = () => {\n    const roundSuitRef = child(gameInfoRef, \"thisRoundSuit\");\n    onValue(roundSuitRef, (data) => {\n      const roundSuit = data.val();\n      setThisRoundSuit(roundSuit);\n    });\n  };\n\n  const listenOnChangeRouteEvent = () => {\n    const eventRef = child(roomRef, \"event\");\n\n    onValue(eventRef, (data) => {\n      const type = data.val();\n      if (type) {\n        setModalType(type);\n        remove(eventRef);\n      }\n    });\n  };\n\n  const detectUserDisConnect = () => {\n    onDisconnect(roomRef).update({\n      event: GameStatusTypes.SomeoneLeaveGame,\n    });\n\n    onDisconnect(child(roomRef, `playersInfo/${userID}`)).remove();\n  };\n\n  const removeListeners = () => {\n    const gameInfoRef = child(roomRef, \"gameInfo\");\n    const eventRef = child(roomRef, \"event\");\n    const deckInfo = child(gameInfoRef, \"deck\");\n    const roundSuitRef = child(gameInfoRef, \"thisRoundSuit\");\n    off(deckInfo);\n    off(roundSuitRef);\n    remove(eventRef);\n    onDisconnect(roomRef).cancel();\n    onDisconnect(child(roomRef, `playersInfo/${userID}`)).cancel();\n  };\n\n  return (\n    <Room theme={themeData[theme]} className=\"game_room\">\n      <Cards />\n      <CardTable />\n      <MainInfo />\n      <ModalRoot initGameData={initGameData} />\n      <Navbar />\n    </Room>\n  );\n};\n\nexport default GameRoom;\n","import React, { useEffect, useState } from \"react\";\nimport db from \"database\";\nimport { ref, onValue } from \"firebase/database\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport NameFillIn from \"components/Global/molecules/NameFillin\";\nimport Button from \"components/Global/atoms/Button\";\nimport { FirebaseRoom } from \"types/room\";\nimport { ThemeTypes } from \"types/theme\";\nimport { themeState } from \"store/theme\";\nimport { color } from \"style/theme\";\nimport useFirebaseRoom from \"util/hook/useFirebaseRoom\";\n\ntype Params = { roomId: string };\n\nconst themeData = {\n  light: {\n    stripes_1: \"#f7cbca\",\n    stripes_2: \"#faf7f0\",\n    content_bg: \"#faf8ece8\",\n    decoration_arrows: \"#f7cbca\",\n    title_block_1: color.$highlight_color,\n    title_block_2: color.$green_color,\n    title_block_3: color.$orange_color,\n    title_fg: \"white\",\n    button_color: \"#f7cbca\",\n    fg: color.$default_font_color,\n  },\n  dark: {\n    stripes_1: \"#151615\",\n    stripes_2: \"#1F211F\",\n    content_bg: color.$dark_dim_bg_color,\n    decoration_arrows: color.$fluorescent_yellow_color,\n    title_block_1: color.$fluorescent_orange_color,\n    title_block_2: color.$fluorescent_green_color,\n    title_block_3: color.$fluorescent_yellow_color,\n    title_fg: color.$default_font_color,\n    button_color: color.$fluorescent_pink_color,\n    fg: color.$dark_default_font_color,\n  },\n};\n\ninterface PageProperty {\n  themeType: ThemeTypes;\n}\n\nconst Page = styled.div<PageProperty>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: linear-gradient(\n    39deg,\n    ${({ theme }) => theme.stripes_1} 22.22%,\n    ${({ theme }) => theme.stripes_2} 22.22%,\n    ${({ theme }) => theme.stripes_2} 50%,\n    ${({ theme }) => theme.stripes_1} 50%,\n    ${({ theme }) => theme.stripes_1} 72.22%,\n    ${({ theme }) => theme.stripes_2} 72.22%,\n    ${({ theme }) => theme.stripes_2} 100%\n  );\n  background-size: 42.9px 34.74px;\n\n  .content {\n    display: flex;\n    flex: 1 1 auto;\n    flex-direction: column;\n    align-items: center;\n    padding: 40px 0 20px;\n    box-sizing: border-box;\n    background-color: ${({ theme }) => theme.content_bg};\n    border: 1px solid ${color.$fluorescent_pink_color};\n    border-radius: 10px;\n    position: relative;\n  }\n\n  .invite_content {\n    position: absolute;\n    top: 0;\n    transform: translateY(-50%);\n\n    span {\n      display: inline-block;\n      position: relative;\n      color: ${({ theme }) => theme.title_fg};\n\n      &:first-child {\n        font-size: 16px;\n        padding: 3px;\n        background-color: ${({ theme }) => theme.title_block_1};\n        transform: rotate(-1deg);\n      }\n\n      &:nth-child(2) {\n        z-index: 10;\n        font-size: 26px;\n        padding: 5px;\n        background-color: ${({ theme }) => theme.title_block_2};\n        transform: rotate(-4deg);\n      }\n\n      &:last-child {\n        font-size: 18px;\n        padding: 2px;\n        background-color: ${({ theme }) => theme.title_block_3};\n        transform: rotate(3deg);\n      }\n    }\n  }\n\n  .decoration {\n    margin-bottom: 20px;\n\n    span {\n      display: block;\n      transform: rotate(90deg);\n      color: ${({ theme }) => theme.decoration_arrows};\n    }\n  }\n\n  .players_amount {\n    font-size: 13px;\n    margin-top: 10px;\n    color: ${({ theme }) => theme.fg};\n  }\n\n  .unable_content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    p {\n      color: ${({ theme }) => theme.fg};\n    }\n\n    button {\n      margin-top: 10px;\n    }\n  }\n`;\nconst InvitePage = ({ match }: RouteComponentProps<Params>) => {\n  const roomId = match.params.roomId;\n  const theme = useRecoilValue(themeState);\n  const { push } = useHistory();\n  const [, { updateDbRoomData }] = useFirebaseRoom();\n  const [roomName, setRoomName] = useState(\"\");\n  const [currentPlayer, setPlayers] = useState<string[]>([]);\n\n  useEffect(() => {\n    const getRoom = () => {\n      const roomRef = ref(db, roomId);\n      onValue(roomRef, (d) => {\n        const roomData = d.val() as FirebaseRoom | null;\n        if (!roomData) {\n          push(\"/\");\n          return;\n        }\n        const currentPlayers = Object.values(roomData.playersInfo).map(\n          (p) => p.name\n        );\n        setRoomName(roomData.roomName);\n        setPlayers([...currentPlayers]);\n      });\n    };\n    getRoom();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomId]);\n\n  const enterGame = () => {\n    updateDbRoomData(roomId);\n  };\n\n  return (\n    <Page theme={themeData[theme]} themeType={theme} className=\"invite_page\">\n      <section className=\"content\">\n        <div className=\"invite_content\">\n          <span>來自</span>\n          <span>{roomName}</span>\n          <span>的橋牌戰帖</span>\n        </div>\n        {currentPlayer.length > 3 ? (\n          <div className=\"unable_content\">\n            <p>🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯</p>\n            <p>遲來一歩！已經客滿了</p>\n            <p>🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯</p>\n            <Button\n              className=\"back_to_home_button\"\n              color={themeData[theme].button_color}\n              onClick={() => {\n                push(\"/\");\n              }}\n              type=\"button\"\n            >\n              回到首頁\n            </Button>\n          </div>\n        ) : (\n          <>\n            <div className=\"decoration\">\n              <span>&#62;</span>\n              <span>&#62;</span>\n              <span>&#62;</span>\n            </div>\n            <NameFillIn\n              actionText=\"立即加入戰局\"\n              buttonText=\"GO\"\n              onEnter={enterGame}\n            />\n            <p className=\"players_amount\">\n              🍰\n              {currentPlayer[0]}\n              {currentPlayer.length > 1 &&\n                ` 跟其他 ${currentPlayer.length - 1} 位橋牌友`}\n              已經加入 🍰\n            </p>\n          </>\n        )}\n      </section>\n    </Page>\n  );\n};\n\nexport default InvitePage;\n","import { useRecoilValue } from 'recoil';\nimport Home from './views/Home';\nimport WaitRoom from './views/WaitRoom';\nimport GameRoom from './views/GameRoom';\nimport InvitePage from './views/InvitePage';\nimport { userRoomState, userNameState } from 'store/user';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst App = () => {\n  const roomId = useRecoilValue(userRoomState);\n  const userName = useRecoilValue(userNameState);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/w/:roomId/:userID\">\n          {roomId && userName ? <WaitRoom /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/g/:roomId/:userID\">\n          {roomId && userName ? <GameRoom /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/i/:roomId\" component={InvitePage} />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport { GlobalStyle } from './style/globalStyle'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <RecoilRoot>\n        <App />\n        <GlobalStyle />\n    </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}